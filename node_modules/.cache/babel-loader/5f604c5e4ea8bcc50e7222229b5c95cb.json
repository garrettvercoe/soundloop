{"ast":null,"code":"var _jsxFileName = \"/Users/ericduong/Documents/repos/soundloop/src/components/TempoSlider.js\";\nimport React from \"react\";\nimport { updateTempo } from \"../actions/shared\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nconst TempoSlider = withStyles({\n  root: {\n    color: \"#692D54\",\n    height: 0\n  },\n  thumb: {\n    width: 15,\n    height: 15,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow: \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)\",\n      backgroundColor: \"#692D54\" // Reset on touch devices, it doesn't add specificity\n\n    }\n  },\n  // active: {},\n  track: {\n    height: 4,\n    borderRadius: 4\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4\n  }\n})(Slider);\nconst TempoIconStyle = {\n  color: \"#692d55\"\n};\n\nclass Tempo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleTempoChange = this.handleTempoChange.bind(this);\n  }\n\n  handleTempoChange(event, newValue) {\n    this.props.dispatch(updateTempo(newValue));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faRunning,\n      style: TempoIconStyle,\n      className: \"inl-blk fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        padding: \"0 1rem\",\n        display: \"inline-block\",\n        width: \"125px\",\n        alignItems: \"center\",\n        color: \"#692d55\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(TempoSlider, {\n      defaultValue: 1,\n      onChange: this.handleTempoChange,\n      \"aria-labelledby\": \"continuous-slider\",\n      valueLabelDisplay: \"off\",\n      min: 70,\n      max: 110,\n      step: 1,\n      disabled: !this.props.playing ? false : true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      className: \"light \",\n      style: {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.props.tempo));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tempo: state.shared.tempo,\n    playing: state.shared.playing\n  };\n}\n\nconst ConnectedTempo = connect(mapStateToProps)(Tempo);\nexport default ConnectedTempo;","map":{"version":3,"sources":["/Users/ericduong/Documents/repos/soundloop/src/components/TempoSlider.js"],"names":["React","updateTempo","withStyles","makeStyles","Slider","faRunning","FontAwesomeIcon","connect","TempoSlider","root","color","height","thumb","width","boxShadow","backgroundColor","track","borderRadius","rail","TempoIconStyle","Tempo","Component","constructor","props","handleTempoChange","bind","event","newValue","dispatch","render","padding","display","alignItems","playing","tempo","mapStateToProps","state","shared","ConnectedTempo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { updateTempo } from \"../actions/shared\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { faRunning } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\n\nconst TempoSlider = withStyles({\n  root: {\n    color: \"#692D54\",\n    height: 0\n  },\n  thumb: {\n    width: 15,\n    height: 15,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow:\n        \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)\",\n\n      backgroundColor: \"#692D54\"\n\n      // Reset on touch devices, it doesn't add specificity\n    }\n  },\n  // active: {},\n  track: {\n    height: 4,\n    borderRadius: 4\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4\n  }\n})(Slider);\n\nconst TempoIconStyle = {\n  color: \"#692d55\"\n};\n\nclass Tempo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleTempoChange = this.handleTempoChange.bind(this);\n  }\n\n  handleTempoChange(event, newValue) {\n    this.props.dispatch(updateTempo(newValue));\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <FontAwesomeIcon\n          icon={faRunning}\n          style={TempoIconStyle}\n          className=\"inl-blk fa-lg\"\n        />\n        <div\n          style={{\n            padding: \"0 1rem\",\n            display: \"inline-block\",\n            width: \"125px\",\n            alignItems: \"center\",\n            color: \"#692d55\"\n          }}\n        >\n          <TempoSlider\n            defaultValue={1}\n            onChange={this.handleTempoChange}\n            aria-labelledby=\"continuous-slider\"\n            valueLabelDisplay=\"off\"\n            min={70}\n            max={110}\n            step={1}\n            disabled={!this.props.playing ? false : true}\n          />\n        </div>\n        <h3 className=\"light \" style={{ display: \"inline-block\" }}>\n          {this.props.tempo}\n        </h3>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tempo: state.shared.tempo,\n    playing: state.shared.playing\n  };\n}\nconst ConnectedTempo = connect(mapStateToProps)(Tempo);\n\nexport default ConnectedTempo;\n"]},"metadata":{},"sourceType":"module"}