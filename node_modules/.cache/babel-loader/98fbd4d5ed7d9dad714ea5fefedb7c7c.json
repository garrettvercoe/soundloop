{"ast":null,"code":"var _jsxFileName = \"/Users/ericduong/Documents/repos/soundloop/src/components/MountedTones.js\";\nimport React from \"react\";\nimport \"../styles/index.css\";\nimport { Layer, Group } from \"react-konva\";\nimport { connect } from \"react-redux\";\nimport ToneKonva from \"./ToneKonva\";\n\nclass MountedTones extends React.Component {\n  componentDidMount() {\n    console.log(\"CHILD: \" + JSON.stringify(this.layer.children));\n    console.log(\"GROUP: \" + this.gruppe);\n    this.gruppe.rotate(3);\n    console.log(\"TONES: \" + this.props.tones);\n    console.log(\"FILTER: \" + this.props.tones.filter(item => item.attachedLoop === 0));\n    console.log(\"FILTER: \" + this.props.tones.filter(function (item) {\n      return item.attachedLoop == 0;\n    })); // console.log(\"CHILD1: \" + this.child1)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.tones !== this.props.tones) {\n      console.log(\"TONES update: \" + this.props.tones);\n    }\n  }\n\n  render() {\n    console.log(\"TONES updateddd: \" + this.props.tones);\n    console.log(\"FILTER: \" + this.props.tones.filter(item => item.attachedLoop === 0));\n\n    if (this.props.tones.length === 112) {\n      return React.createElement(Layer, {\n        ref: node => {\n          this.layer = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Group, {\n        ref: node => {\n          this.gruppe = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.props.tones.map(item => {\n        return React.createElement(ToneKonva, {\n          color: item.color,\n          x: this.props.center.x,\n          y: this.props.center.y,\n          offset: item.offset,\n          radius: item.radius,\n          attachedLoop: item.attachedLoop,\n          sound: item.sound,\n          duration: item.duration,\n          strokeWidth: item.strokeWidth,\n          id: item.id,\n          rotation: item.rotation,\n          ref: node => {\n            this.child = node;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      })));\n    } else {\n      return null;\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tones: state.tones,\n    loops: state.loops,\n    center: state.shared.center\n  };\n}\n\nexport default connect(mapStateToProps)(MountedTones);","map":{"version":3,"sources":["/Users/ericduong/Documents/repos/soundloop/src/components/MountedTones.js"],"names":["React","Layer","Group","connect","ToneKonva","MountedTones","Component","componentDidMount","console","log","JSON","stringify","layer","children","gruppe","rotate","props","tones","filter","item","attachedLoop","componentDidUpdate","prevProps","render","length","node","map","color","center","x","y","offset","radius","sound","duration","strokeWidth","id","rotation","child","mapStateToProps","state","loops","shared"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../styles/index.css\";\nimport { Layer, Group } from \"react-konva\";\n\nimport { connect } from \"react-redux\";\nimport ToneKonva from \"./ToneKonva\";\n\nclass MountedTones extends React.Component {\n  componentDidMount(){\n    console.log(\"CHILD: \" + JSON.stringify(this.layer.children))\n    console.log(\"GROUP: \" + this.gruppe)\n    this.gruppe.rotate(3)\n    console.log(\"TONES: \" + this.props.tones)\n\n    console.log(\"FILTER: \" + this.props.tones.filter(item => item.attachedLoop === 0))\n    console.log(\"FILTER: \" + this.props.tones.filter(function(item){return item.attachedLoop==0}))\n    // console.log(\"CHILD1: \" + this.child1)\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.tones !== this.props.tones){\n      console.log(\"TONES update: \" + this.props.tones)\n    }\n  }\n\n  render() {\n    console.log(\"TONES updateddd: \" + this.props.tones)\n    console.log(\"FILTER: \" + this.props.tones.filter(item => item.attachedLoop === 0))\n    if (this.props.tones.length === 112){\n    return (\n      <Layer ref={node => { this.layer = node; }}>\n        <Group ref={node => { this.gruppe = node; }}>\n        {/* {this.props.tones.map(item => {\n          return (\n            <ToneKonva\n              color={item.color}\n              x={this.props.center.x}\n              y={this.props.center.y}\n              offset={item.offset}\n              radius={item.radius}\n              attachedLoop={item.attachedLoop}\n              sound={item.sound}\n              duration={item.duration}\n              strokeWidth={item.strokeWidth}\n              id={item.id}\n              rotation={item.rotation}\n              ref={node => { this.child = node; }}\n            />\n          );\n        })} */}\n        {this.props.tones.map(item => {\n          return (\n            <ToneKonva\n              color={item.color}\n              x={this.props.center.x}\n              y={this.props.center.y}\n              offset={item.offset}\n              radius={item.radius}\n              attachedLoop={item.attachedLoop}\n              sound={item.sound}\n              duration={item.duration}\n              strokeWidth={item.strokeWidth}\n              id={item.id}\n              rotation={item.rotation}\n              ref={node => { this.child = node; }}\n            />\n          );\n        })}\n        </Group>\n      </Layer>\n    );\n      } else {\n        return null\n      }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tones: state.tones,\n    loops: state.loops,\n    center: state.shared.center\n  };\n}\n\nexport default connect(mapStateToProps)(MountedTones);\n"]},"metadata":{},"sourceType":"module"}