{"ast":null,"code":"import { addLoop, activateLoop } from \"./loops\"; //OVERALL\n\nexport const TOGGLE_PLAY = \"TOGGLE_PLAY\";\nexport const TOGGLE_STOP = \"TOGGLE_STOP\";\nexport const TOGGLE_RESTART = \"TOGGLE_RESTART\";\nexport const ADD_LOOP_COUNT = \"ADD_LOOP_COUNT\";\nexport const TOGGLE_MUTE = \"TOGGLE_MUTE\";\nexport const TOGGLE_UNMUTE = \"TOGGLE_UNMUTE\";\nexport const TRASH_ALL = \"TRASH_ALL\";\nexport const IMPORT_FILE = \"IMPORT_FILE\";\nexport const RESET_LOOP_COUNT = \"RESET_LOOP_COUNT\";\nexport function togglePlay() {\n  return {\n    type: TOGGLE_PLAY,\n    playing: true\n  };\n}\nexport function toggleStop() {\n  return {\n    type: TOGGLE_STOP,\n    playing: false\n  };\n}\nlet loopCount = 1;\nexport function addLoopCount() {\n  return {\n    type: ADD_LOOP_COUNT,\n    loopCount: loopCount++\n  };\n}\nexport function resetLoopCount() {\n  loopCount = 1;\n  return {\n    type: RESET_LOOP_COUNT,\n    loopCount: loopCount\n  };\n}\nexport function toggleMute() {\n  return {\n    type: TOGGLE_MUTE,\n    muted: true\n  };\n}\nexport function toggleUnmute() {\n  return {\n    type: TOGGLE_UNMUTE,\n    muted: false\n  };\n}\nexport function trashAll() {\n  return dispatch => {\n    dispatch({\n      type: TRASH_ALL\n    });\n    dispatch(addLoop(window.innerHeight / 3));\n    dispatch(addLoop(window.innerHeight / 6));\n    dispatch(addLoop(window.innerHeight / 12));\n    dispatch(addLoop(window.innerHeight / 24));\n    dispatch(addLoop(window.innerHeight / 48));\n    dispatch(activateLoop(0));\n    dispatch(resetLoopCount());\n  };\n}\nexport function importFile(file) {\n  return {\n    type: IMPORT_FILE,\n    data: file\n  };\n}","map":{"version":3,"sources":["/Users/garrett/repos/soundloop/src/actions/shared.js"],"names":["addLoop","activateLoop","TOGGLE_PLAY","TOGGLE_STOP","TOGGLE_RESTART","ADD_LOOP_COUNT","TOGGLE_MUTE","TOGGLE_UNMUTE","TRASH_ALL","IMPORT_FILE","RESET_LOOP_COUNT","togglePlay","type","playing","toggleStop","loopCount","addLoopCount","resetLoopCount","toggleMute","muted","toggleUnmute","trashAll","dispatch","window","innerHeight","importFile","file","data"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,YAAlB,QAAsC,SAAtC,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,SAASC,UAAT,GAAsB;AAC3B,SAAO;AACLC,IAAAA,IAAI,EAAEV,WADD;AAELW,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID;AAED,OAAO,SAASC,UAAT,GAAsB;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAET,WADD;AAELU,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID;AAED,IAAIE,SAAS,GAAG,CAAhB;AACA,OAAO,SAASC,YAAT,GAAwB;AAC7B,SAAO;AACLJ,IAAAA,IAAI,EAAEP,cADD;AAELU,IAAAA,SAAS,EAAEA,SAAS;AAFf,GAAP;AAID;AAED,OAAO,SAASE,cAAT,GAA0B;AAC/BF,EAAAA,SAAS,GAAG,CAAZ;AACA,SAAO;AACLH,IAAAA,IAAI,EAAEF,gBADD;AAELK,IAAAA,SAAS,EAAEA;AAFN,GAAP;AAID;AAED,OAAO,SAASG,UAAT,GAAsB;AAC3B,SAAO;AACLN,IAAAA,IAAI,EAAEN,WADD;AAELa,IAAAA,KAAK,EAAE;AAFF,GAAP;AAID;AAED,OAAO,SAASC,YAAT,GAAwB;AAC7B,SAAO;AACLR,IAAAA,IAAI,EAAEL,aADD;AAELY,IAAAA,KAAK,EAAE;AAFF,GAAP;AAID;AAED,OAAO,SAASE,QAAT,GAAoB;AACzB,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AAAEV,MAAAA,IAAI,EAAEJ;AAAR,KAAD,CAAR;AACAc,IAAAA,QAAQ,CAACtB,OAAO,CAACuB,MAAM,CAACC,WAAP,GAAqB,CAAtB,CAAR,CAAR;AACAF,IAAAA,QAAQ,CAACtB,OAAO,CAACuB,MAAM,CAACC,WAAP,GAAqB,CAAtB,CAAR,CAAR;AACAF,IAAAA,QAAQ,CAACtB,OAAO,CAACuB,MAAM,CAACC,WAAP,GAAqB,EAAtB,CAAR,CAAR;AACAF,IAAAA,QAAQ,CAACtB,OAAO,CAACuB,MAAM,CAACC,WAAP,GAAqB,EAAtB,CAAR,CAAR;AACAF,IAAAA,QAAQ,CAACtB,OAAO,CAACuB,MAAM,CAACC,WAAP,GAAqB,EAAtB,CAAR,CAAR;AACAF,IAAAA,QAAQ,CAACrB,YAAY,CAAC,CAAD,CAAb,CAAR;AACAqB,IAAAA,QAAQ,CAACL,cAAc,EAAf,CAAR;AACD,GATD;AAUD;AAED,OAAO,SAASQ,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,SAAO;AACLd,IAAAA,IAAI,EAAEH,WADD;AAELkB,IAAAA,IAAI,EAAED;AAFD,GAAP;AAID","sourcesContent":["import { addLoop, activateLoop } from \"./loops\";\n\n//OVERALL\nexport const TOGGLE_PLAY = \"TOGGLE_PLAY\";\nexport const TOGGLE_STOP = \"TOGGLE_STOP\";\nexport const TOGGLE_RESTART = \"TOGGLE_RESTART\";\nexport const ADD_LOOP_COUNT = \"ADD_LOOP_COUNT\";\nexport const TOGGLE_MUTE = \"TOGGLE_MUTE\";\nexport const TOGGLE_UNMUTE = \"TOGGLE_UNMUTE\";\nexport const TRASH_ALL = \"TRASH_ALL\";\nexport const IMPORT_FILE = \"IMPORT_FILE\";\nexport const RESET_LOOP_COUNT = \"RESET_LOOP_COUNT\";\n\nexport function togglePlay() {\n  return {\n    type: TOGGLE_PLAY,\n    playing: true\n  };\n}\n\nexport function toggleStop() {\n  return {\n    type: TOGGLE_STOP,\n    playing: false\n  };\n}\n\nlet loopCount = 1;\nexport function addLoopCount() {\n  return {\n    type: ADD_LOOP_COUNT,\n    loopCount: loopCount++\n  };\n}\n\nexport function resetLoopCount() {\n  loopCount = 1;\n  return {\n    type: RESET_LOOP_COUNT,\n    loopCount: loopCount\n  };\n}\n\nexport function toggleMute() {\n  return {\n    type: TOGGLE_MUTE,\n    muted: true\n  };\n}\n\nexport function toggleUnmute() {\n  return {\n    type: TOGGLE_UNMUTE,\n    muted: false\n  };\n}\n\nexport function trashAll() {\n  return dispatch => {\n    dispatch({ type: TRASH_ALL });\n    dispatch(addLoop(window.innerHeight / 3));\n    dispatch(addLoop(window.innerHeight / 6));\n    dispatch(addLoop(window.innerHeight / 12));\n    dispatch(addLoop(window.innerHeight / 24));\n    dispatch(addLoop(window.innerHeight / 48));\n    dispatch(activateLoop(0));\n    dispatch(resetLoopCount());\n  };\n}\n\nexport function importFile(file) {\n  return {\n    type: IMPORT_FILE,\n    data: file\n  };\n}\n"]},"metadata":{},"sourceType":"module"}