{"ast":null,"code":"import _objectSpread from \"/Users/ericduong/Documents/repos/soundloop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_TONE, RECEIVE_TONES, RESIZE_TONE, UPDATE_TONE, ROTATE_TONE } from \"../actions/tones\";\nimport { strictEqual } from \"assert\";\nimport { stat } from \"fs\";\nexport default function tones(state = [], action) {\n  switch (action.type) {\n    case ADD_TONE:\n      return [...state, {\n        id: action.id,\n        color: action.color,\n        stroke: action.stroke,\n        strokeWidth: action.strokeWidth,\n        attachedLoop: action.attachedLoop,\n        radius: action.radius,\n        sound: action.sound,\n        position: action.position,\n        offset: action.offset\n      }];\n    // return new state with modified tone color, sound, and stroke with everything else same\n\n    case UPDATE_TONE:\n      //console.log(...state);\n      var id = action.id;\n      return [...state.slice(0, id), _objectSpread({}, state[id], {\n        color: action.color,\n        sound: action.sound,\n        strokeWidth: action.strokeWidth\n      }), ...state.slice(id + 1)];\n\n    case ROTATE_TONE:\n      var id = action.id;\n      return [...state.slice(0, id), _objectSpread({}, state[id], {\n        offset: action.rotation\n      }), ...state.slice(id + 1)];\n\n    case RESIZE_TONE:\n      return {\n        state\n      };\n\n    case RECEIVE_TONES:\n      return _objectSpread({}, state, action.tones);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ericduong/Documents/repos/soundloop/src/reducers/tones.js"],"names":["ADD_TONE","RECEIVE_TONES","RESIZE_TONE","UPDATE_TONE","ROTATE_TONE","strictEqual","stat","tones","state","action","type","id","color","stroke","strokeWidth","attachedLoop","radius","sound","position","offset","slice","rotation"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,WAAlC,EAA+CC,WAA/C,EAA4DC,WAA5D,QAA+E,kBAA/E;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,IAAT,QAAqB,IAArB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,QAAL;AACE,aAAO,CACL,GAAGQ,KADE,EAEL;AACEG,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADb;AAEEC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAFhB;AAGEC,QAAAA,MAAM,EAAEJ,MAAM,CAACI,MAHjB;AAIEC,QAAAA,WAAW,EAAEL,MAAM,CAACK,WAJtB;AAKEC,QAAAA,YAAY,EAAEN,MAAM,CAACM,YALvB;AAMEC,QAAAA,MAAM,EAAEP,MAAM,CAACO,MANjB;AAOEC,QAAAA,KAAK,EAAER,MAAM,CAACQ,KAPhB;AAQEC,QAAAA,QAAQ,EAAET,MAAM,CAACS,QARnB;AASEC,QAAAA,MAAM,EAAEV,MAAM,CAACU;AATjB,OAFK,CAAP;AAeA;;AACF,SAAKhB,WAAL;AACE;AACA,UAAIQ,EAAE,GAAGF,MAAM,CAACE,EAAhB;AAEA,aAAO,CACL,GAAGH,KAAK,CAACY,KAAN,CAAY,CAAZ,EAAeT,EAAf,CADE,oBAGAH,KAAK,CAACG,EAAD,CAHL;AAIHC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAJX;AAKHK,QAAAA,KAAK,EAAER,MAAM,CAACQ,KALX;AAMHH,QAAAA,WAAW,EAAEL,MAAM,CAACK;AANjB,UAQL,GAAGN,KAAK,CAACY,KAAN,CAAYT,EAAE,GAAC,CAAf,CARE,CAAP;;AAWF,SAAKP,WAAL;AACI,UAAIO,EAAE,GAAGF,MAAM,CAACE,EAAhB;AAEA,aAAO,CACL,GAAGH,KAAK,CAACY,KAAN,CAAY,CAAZ,EAAeT,EAAf,CADE,oBAGAH,KAAK,CAACG,EAAD,CAHL;AAIHQ,QAAAA,MAAM,EAAEV,MAAM,CAACY;AAJZ,UAML,GAAGb,KAAK,CAACY,KAAN,CAAYT,EAAE,GAAC,CAAf,CANE,CAAP;;AASJ,SAAKT,WAAL;AACE,aAAO;AAAEM,QAAAA;AAAF,OAAP;;AAEF,SAAKP,aAAL;AACE,+BACKO,KADL,EAEKC,MAAM,CAACF,KAFZ;;AAIF;AACE,aAAOC,KAAP;AAtDJ;AAwDD","sourcesContent":["import { ADD_TONE, RECEIVE_TONES, RESIZE_TONE, UPDATE_TONE, ROTATE_TONE } from \"../actions/tones\";\nimport { strictEqual } from \"assert\";\nimport { stat } from \"fs\";\n\nexport default function tones(state = [], action) {\n  switch (action.type) {\n    case ADD_TONE:\n      return [\n        ...state,\n        {\n          id: action.id,\n          color: action.color,\n          stroke: action.stroke,\n          strokeWidth: action.strokeWidth,\n          attachedLoop: action.attachedLoop,\n          radius: action.radius,\n          sound: action.sound,\n          position: action.position,\n          offset: action.offset\n        }\n      ];\n\n      // return new state with modified tone color, sound, and stroke with everything else same\n    case UPDATE_TONE:\n      //console.log(...state);\n      var id = action.id;\n      \n      return [\n        ...state.slice(0, id), \n        {\n          ...state[id], \n          color: action.color,\n          sound: action.sound,\n          strokeWidth: action.strokeWidth\n        }, \n        ...state.slice(id+1)\n      ];\n\n    case ROTATE_TONE:\n        var id = action.id;\n      \n        return [\n          ...state.slice(0, id), \n          {\n            ...state[id], \n            offset: action.rotation\n          }, \n          ...state.slice(id+1)\n        ];\n      \n    case RESIZE_TONE:\n      return { state };\n\n    case RECEIVE_TONES:\n      return {\n        ...state,\n        ...action.tones\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}