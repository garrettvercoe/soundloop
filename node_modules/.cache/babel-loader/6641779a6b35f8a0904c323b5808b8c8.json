{"ast":null,"code":"var _jsxFileName = \"/Users/garrett/repos/soundloop/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Text, Circle } from \"react-konva\";\nimport Konva from \"konva\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport Portal from \"./Portal\";\nimport BottomNav from \"./BottomNav\";\nimport MountedTones from \"./MountedTones\";\nimport { connect } from \"react-redux\";\nimport reducer from \"../reducers\";\nimport middleware from \"../middleware\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport MountedLoops from \"./MountedLoops\";\nimport Cord from \"../components/Cord\";\nimport LeftNav from \"../components/LeftNav\";\nimport { screenResize } from \"../actions/shared\";\nimport BugReporter from \"./BugReporter\";\nimport ReactGA from \"react-ga\";\nimport MouseTracker from \"./MouseTracker\";\n\nfunction initializeReactGA() {\n  ReactGA.initialize(\"UA-145158244-1\");\n  ReactGA.pageview(\"/app\");\n}\n\ninitializeReactGA();\nconst store = createStore(reducer, middleware);\n\nclass App extends Component {\n  componentWillMount() {\n    this.screenWidth = window.innerWidth;\n    this.screenHeight = window.innerHeight;\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", () => {\n      store.dispatch(screenResize(window.innerWidth, window.innerHeight));\n      this.screenWidth = store.getState().shared.screenWidth;\n      this.screenHeight = store.getState().shared.screenHeight;\n    });\n  }\n\n  render() {\n    // Stage is a div container\n    // Layer is actual canvas element (so you may have several canvases in the stage)\n    // And then we have canvas shapes inside the Layer\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Stage, {\n      width: this.screenWidth,\n      height: this.screenHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(MountedLoops, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(MountedTones, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Cord, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(Portal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(MouseTracker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(BugReporter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(LeftNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(BottomNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/garrett/repos/soundloop/src/components/App.js"],"names":["React","Component","render","Stage","Layer","Rect","Text","Circle","Konva","TransitionGroup","CSSTransition","Portal","BottomNav","MountedTones","connect","reducer","middleware","Provider","createStore","MountedLoops","Cord","LeftNav","screenResize","BugReporter","ReactGA","MouseTracker","initializeReactGA","initialize","pageview","store","App","componentWillMount","screenWidth","window","innerWidth","screenHeight","innerHeight","componentDidMount","addEventListener","dispatch","getState","shared"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Text, Circle } from \"react-konva\";\nimport Konva from \"konva\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport Portal from \"./Portal\";\nimport BottomNav from \"./BottomNav\";\nimport MountedTones from \"./MountedTones\";\nimport { connect } from \"react-redux\";\nimport reducer from \"../reducers\";\nimport middleware from \"../middleware\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport MountedLoops from \"./MountedLoops\";\nimport Cord from \"../components/Cord\";\nimport LeftNav from \"../components/LeftNav\";\nimport { screenResize } from \"../actions/shared\";\nimport BugReporter from \"./BugReporter\";\nimport ReactGA from \"react-ga\";\nimport MouseTracker from \"./MouseTracker\";\n\nfunction initializeReactGA() {\n  ReactGA.initialize(\"UA-145158244-1\");\n  ReactGA.pageview(\"/app\");\n}\n\ninitializeReactGA();\n\nconst store = createStore(reducer, middleware);\n\nclass App extends Component {\n  componentWillMount() {\n    this.screenWidth = window.innerWidth;\n    this.screenHeight = window.innerHeight;\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", () => {\n      store.dispatch(screenResize(window.innerWidth, window.innerHeight));\n      this.screenWidth = store.getState().shared.screenWidth;\n      this.screenHeight = store.getState().shared.screenHeight;\n    });\n  }\n  render() {\n    // Stage is a div container\n    // Layer is actual canvas element (so you may have several canvases in the stage)\n    // And then we have canvas shapes inside the Layer\n    return (\n      <React.Fragment>\n        <Stage width={this.screenWidth} height={this.screenHeight}>\n          <Provider store={store}>\n            <MountedLoops />\n\n            <MountedTones />\n            <Cord />\n          </Provider>\n          <Portal>\n            <Provider store={store}>\n              <MouseTracker />\n              <BugReporter />\n              <LeftNav />\n              <BottomNav />\n            </Provider>\n          </Portal>\n        </Stage>\n      </React.Fragment>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}