{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Util_1 = require(\"../Util\");\n\nvar Factory_1 = require(\"../Factory\");\n\nvar Shape_1 = require(\"../Shape\");\n\nvar Global_1 = require(\"../Global\");\n\nvar Rect = function (_super) {\n  __extends(Rect, _super);\n\n  function Rect() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Rect.prototype._sceneFunc = function (context) {\n    var cornerRadius = this.cornerRadius(),\n        width = this.width(),\n        height = this.height();\n    context.beginPath();\n\n    if (!cornerRadius) {\n      context.rect(0, 0, width, height);\n    } else {\n      var topLeft = 0;\n      var topRight = 0;\n      var bottomLeft = 0;\n      var bottomRight = 0;\n\n      if (typeof cornerRadius === 'number') {\n        topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n      } else {\n        topLeft = Math.min(cornerRadius[0], width / 2, height / 2);\n        topRight = Math.min(cornerRadius[1], width / 2, height / 2);\n        bottomRight = Math.min(cornerRadius[2], width / 2, height / 2);\n        bottomLeft = Math.min(cornerRadius[3], width / 2, height / 2);\n      }\n\n      context.moveTo(topLeft, 0);\n      context.lineTo(width - topRight, 0);\n      context.arc(width - topRight, topRight, topRight, Math.PI * 3 / 2, 0, false);\n      context.lineTo(width, height - bottomRight);\n      context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n      context.lineTo(bottomLeft, height);\n      context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n      context.lineTo(0, topLeft);\n      context.arc(topLeft, topLeft, topLeft, Math.PI, Math.PI * 3 / 2, false);\n    }\n\n    context.closePath();\n    context.fillStrokeShape(this);\n  };\n\n  return Rect;\n}(Shape_1.Shape);\n\nexports.Rect = Rect;\nRect.prototype.className = 'Rect';\n\nGlobal_1._registerNode(Rect);\n\nFactory_1.Factory.addGetterSetter(Rect, 'cornerRadius', 0);\nUtil_1.Collection.mapMethods(Rect);","map":null,"metadata":{},"sourceType":"script"}