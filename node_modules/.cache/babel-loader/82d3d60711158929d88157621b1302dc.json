{"ast":null,"code":"import _objectSpread from \"/Users/ericduong/Documents/repos/soundloop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_TONE, RECEIVE_TONES, RESIZE_TONE } from \"../actions/tones\";\nexport default function tones(state = {}, action) {\n  switch (action.type) {\n    case ADD_TONE:\n      const tone = action.tone;\n      const id = tone.id,\n            color = tone.color,\n            sound = tone.sound,\n            attachedLoop = tone.attachedLoop,\n            radius = tone.radius,\n            timeToActivate = tone.timeToActivate,\n            InitPosition = tone.InitPosition,\n            CurrPosition = tone.CurrPosition;\n      return _objectSpread({}, state, {\n        [id]: _objectSpread({}, state[id], {\n          color: state[id].color,\n          sound: state[id].sound,\n          attachedLoop: state[id].attachedLoop,\n          radius: state[id].radius,\n          timeToActivate: state[id].timeToActivate,\n          initPosition: state[id].initPosition,\n          currPosition: state[id].currPosition\n        })\n      });\n\n    case RESIZE_TONE:\n      return {\n        state\n      };\n\n    case RECEIVE_TONES:\n      return _objectSpread({}, state, action.tones);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ericduong/Documents/repos/soundloop/src/reducers/tones.js"],"names":["ADD_TONE","RECEIVE_TONES","RESIZE_TONE","tones","state","action","type","tone","id","color","sound","attachedLoop","radius","timeToActivate","InitPosition","CurrPosition","initPosition","currPosition"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,WAAlC,QAAqD,kBAArD;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,QAAL;AACE,YAAMO,IAAI,GAAGF,MAAM,CAACE,IAApB;AADF,YAGIC,EAHJ,GAWMD,IAXN,CAGIC,EAHJ;AAAA,YAIIC,KAJJ,GAWMF,IAXN,CAIIE,KAJJ;AAAA,YAKIC,KALJ,GAWMH,IAXN,CAKIG,KALJ;AAAA,YAMIC,YANJ,GAWMJ,IAXN,CAMII,YANJ;AAAA,YAOIC,MAPJ,GAWML,IAXN,CAOIK,MAPJ;AAAA,YAQIC,cARJ,GAWMN,IAXN,CAQIM,cARJ;AAAA,YASIC,YATJ,GAWMP,IAXN,CASIO,YATJ;AAAA,YAUIC,YAVJ,GAWMR,IAXN,CAUIQ,YAVJ;AAYE,+BACKX,KADL;AAEE,SAACI,EAAD,qBACKJ,KAAK,CAACI,EAAD,CADV;AAEEC,UAAAA,KAAK,EAAEL,KAAK,CAACI,EAAD,CAAL,CAAUC,KAFnB;AAGEC,UAAAA,KAAK,EAAEN,KAAK,CAACI,EAAD,CAAL,CAAUE,KAHnB;AAIEC,UAAAA,YAAY,EAAEP,KAAK,CAACI,EAAD,CAAL,CAAUG,YAJ1B;AAKEC,UAAAA,MAAM,EAAER,KAAK,CAACI,EAAD,CAAL,CAAUI,MALpB;AAMEC,UAAAA,cAAc,EAAET,KAAK,CAACI,EAAD,CAAL,CAAUK,cAN5B;AAOEG,UAAAA,YAAY,EAAEZ,KAAK,CAACI,EAAD,CAAL,CAAUQ,YAP1B;AAQEC,UAAAA,YAAY,EAAEb,KAAK,CAACI,EAAD,CAAL,CAAUS;AAR1B;AAFF;;AAcF,SAAKf,WAAL;AACE,aAAO;AAAEE,QAAAA;AAAF,OAAP;;AACF,SAAKH,aAAL;AACE,+BACKG,KADL,EAEKC,MAAM,CAACF,KAFZ;;AAIF;AACE,aAAOC,KAAP;AAnCJ;AAqCD","sourcesContent":["import { ADD_TONE, RECEIVE_TONES, RESIZE_TONE } from \"../actions/tones\";\n\nexport default function tones(state = {}, action) {\n  switch (action.type) {\n    case ADD_TONE:\n      const tone = action.tone;\n      const {\n        id,\n        color,\n        sound,\n        attachedLoop,\n        radius,\n        timeToActivate,\n        InitPosition,\n        CurrPosition\n      } = tone;\n      return {\n        ...state,\n        [id]: {\n          ...state[id],\n          color: state[id].color,\n          sound: state[id].sound,\n          attachedLoop: state[id].attachedLoop,\n          radius: state[id].radius,\n          timeToActivate: state[id].timeToActivate,\n          initPosition: state[id].initPosition,\n          currPosition: state[id].currPosition\n        }\n      };\n\n    case RESIZE_TONE:\n      return { state };\n    case RECEIVE_TONES:\n      return {\n        ...state,\n        ...action.tones\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}