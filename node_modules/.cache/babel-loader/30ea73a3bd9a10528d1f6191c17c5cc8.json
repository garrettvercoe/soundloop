{"ast":null,"code":"var _jsxFileName = \"/Users/garrett/repos/soundloop/src/components/ToggleMode.js\";\nimport React from \"react\";\nimport \"../styles/index.css\";\nimport { connect } from \"react-redux\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport { toggleMode, trashAllLinear, trashAllAngular } from \"../actions/shared\";\n\nclass ToggleMode extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = (event, newVal) => {\n      if (newVal !== null) {\n        console.log(\"being passed: \" + newVal);\n\n        if (newVal !== this.props.mode) {\n          if (newVal === \"angular\") {\n            this.props.dispatch(trashAllAngular());\n          } else {\n            this.props.dispatch(trashAllLinear());\n          }\n        }\n\n        this.props.dispatch(toggleMode(newVal));\n      }\n    };\n  }\n\n  render() {\n    var mode = this.props.mode;\n\n    if (this.props.mode === \"init\") {\n      mode = \"angular\";\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"light inl-blk\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"WARNING: Switching modes will reset your SoundLoop!\", \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(ToggleButtonGroup, {\n      value: mode,\n      exclusive: true,\n      onChange: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      value: \"angular\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Angular\"), React.createElement(ToggleButton, {\n      value: \"linear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Linear\")));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    mode: state.shared.mode\n  };\n}\n\nexport default connect(mapStateToProps)(ToggleMode);","map":{"version":3,"sources":["/Users/garrett/repos/soundloop/src/components/ToggleMode.js"],"names":["React","connect","ToggleButton","ToggleButtonGroup","toggleMode","trashAllLinear","trashAllAngular","ToggleMode","Component","handleClick","event","newVal","console","log","props","mode","dispatch","render","mapStateToProps","state","shared"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,eAArC,QAA4D,mBAA5D;;AACA,MAAMC,UAAN,SAAyBP,KAAK,CAACQ,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SACvCC,WADuC,GACzB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAIA,MAAM,KAAK,IAAf,EAAqB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBF,MAA/B;;AACA,YAAIA,MAAM,KAAK,KAAKG,KAAL,CAAWC,IAA1B,EAAgC;AAC9B,cAAIJ,MAAM,KAAK,SAAf,EAAyB;AACvB,iBAAKG,KAAL,CAAWE,QAAX,CAAoBV,eAAe,EAAnC;AACD,WAFD,MAEO;AACL,iBAAKQ,KAAL,CAAWE,QAAX,CAAoBX,cAAc,EAAlC;AACD;AACF;;AACD,aAAKS,KAAL,CAAWE,QAAX,CAAoBZ,UAAU,CAACO,MAAD,CAA9B;AACD;AACF,KAbsC;AAAA;;AAcvCM,EAAAA,MAAM,GAAG;AACP,QAAIF,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAtB;;AACA,QAAI,KAAKD,KAAL,CAAWC,IAAX,KAAoB,MAAxB,EAA+B;AAC7BA,MAAAA,IAAI,GAAG,SAAP;AACD;;AACD,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DACsD,GADtD,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,iBAAD;AACE,MAAA,KAAK,EAAEA,IADT;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,QAAQ,EAAE,KAAKN,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAME,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,CANF,CADF;AAiBD;;AApCsC;;AAuCzC,SAASS,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLJ,IAAAA,IAAI,EAAEI,KAAK,CAACC,MAAN,CAAaL;AADd,GAAP;AAGD;;AAED,eAAed,OAAO,CAACiB,eAAD,CAAP,CAAyBX,UAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport \"../styles/index.css\";\n\nimport { connect } from \"react-redux\";\n\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport { toggleMode, trashAllLinear, trashAllAngular } from \"../actions/shared\";\nclass ToggleMode extends React.Component {\n  handleClick = (event, newVal) => {\n    if (newVal !== null) {\n      console.log(\"being passed: \" + newVal);\n      if (newVal !== this.props.mode) {\n        if (newVal === \"angular\"){\n          this.props.dispatch(trashAllAngular());\n        } else {\n          this.props.dispatch(trashAllLinear());\n        }\n      }\n      this.props.dispatch(toggleMode(newVal));\n    }\n  };\n  render() {\n    var mode = this.props.mode\n    if (this.props.mode === \"init\"){\n      mode = \"angular\";\n    }\n    return (\n      <React.Fragment>\n        <br />\n        <h3 className=\"light inl-blk\">\n          WARNING: Switching modes will reset your SoundLoop!{\" \"}\n        </h3>\n        <br />\n        <ToggleButtonGroup\n          value={mode}\n          exclusive\n          onChange={this.handleClick}\n        >\n          <ToggleButton value=\"angular\">Angular</ToggleButton>\n          <ToggleButton value=\"linear\">Linear</ToggleButton>\n        </ToggleButtonGroup>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    mode: state.shared.mode\n  };\n}\n\nexport default connect(mapStateToProps)(ToggleMode);\n"]},"metadata":{},"sourceType":"module"}