{"ast":null,"code":"var _jsxFileName = \"/Users/ericduong/Documents/repos/soundloop/src/components/MountedTones.js\";\nimport React from \"react\";\nimport \"../styles/index.css\";\nimport { Layer } from \"react-konva\";\nimport { connect } from \"react-redux\";\nimport ToneKonva from \"./ToneKonva\";\n\nclass MountedTones extends React.Component {\n  componentDidMount() {\n    console.log(\"CHILD: \" + this.child);\n    console.log(\"CHILD1: \" + this.child1);\n  }\n\n  render() {\n    return React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(ToneKonva, {\n      color: \"#fff\",\n      x: this.props.center.x,\n      y: this.props.center.y,\n      offset: {\n        x: 0,\n        y: 0\n      },\n      radius: 10,\n      attachedLoop: 1,\n      sound: null,\n      duration: 0,\n      strokeWidth: 0,\n      id: 200,\n      rotation: 0,\n      ref: node => {\n        this.child1 = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tones: state.tones,\n    loops: state.loops,\n    center: state.shared.center\n  };\n}\n\nexport default connect(mapStateToProps)(MountedTones);","map":{"version":3,"sources":["/Users/ericduong/Documents/repos/soundloop/src/components/MountedTones.js"],"names":["React","Layer","connect","ToneKonva","MountedTones","Component","componentDidMount","console","log","child","child1","render","props","center","x","y","node","mapStateToProps","state","tones","loops","shared"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,SAASC,KAAT,QAAsB,aAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AACzCC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAY,KAAKC,KAA7B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAa,KAAKE,MAA9B;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACM,MAAA,KAAK,EAAE,MADb;AAEM,MAAA,CAAC,EAAE,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,CAF3B;AAGM,MAAA,CAAC,EAAE,KAAKF,KAAL,CAAWC,MAAX,CAAkBE,CAH3B;AAIM,MAAA,MAAM,EAAE;AAACD,QAAAA,CAAC,EAAC,CAAH;AAAMC,QAAAA,CAAC,EAAC;AAAR,OAJd;AAKM,MAAA,MAAM,EAAE,EALd;AAMM,MAAA,YAAY,EAAE,CANpB;AAOM,MAAA,KAAK,EAAE,IAPb;AAQM,MAAA,QAAQ,EAAE,CARhB;AASM,MAAA,WAAW,EAAE,CATnB;AAUM,MAAA,EAAE,EAAE,GAVV;AAWM,MAAA,QAAQ,EAAE,CAXhB;AAYM,MAAA,GAAG,EAAGC,IAAD,IAAU;AAAE,aAAKN,MAAL,GAAcM,IAAd;AAAqB,OAZ5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAoCD;;AA3CwC;;AA8C3C,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADR;AAELC,IAAAA,KAAK,EAAEF,KAAK,CAACE,KAFR;AAGLP,IAAAA,MAAM,EAAEK,KAAK,CAACG,MAAN,CAAaR;AAHhB,GAAP;AAKD;;AAED,eAAeX,OAAO,CAACe,eAAD,CAAP,CAAyBb,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport \"../styles/index.css\";\nimport { Layer } from \"react-konva\";\n\nimport { connect } from \"react-redux\";\nimport ToneKonva from \"./ToneKonva\";\n\nclass MountedTones extends React.Component {\n  componentDidMount(){\n    console.log(\"CHILD: \" + this.child)\n    console.log(\"CHILD1: \" + this.child1)\n  }\n\n  render() {\n    return (\n      <Layer>\n        <ToneKonva\n              color={\"#fff\"}\n              x={this.props.center.x}\n              y={this.props.center.y}\n              offset={{x:0, y:0}}\n              radius={10}\n              attachedLoop={1}\n              sound={null}\n              duration={0}\n              strokeWidth={0}\n              id={200}\n              rotation={0}\n              ref={(node) => { this.child1 = node; }}\n            />\n        {/* {this.props.tones.map(item => {\n          return (\n            <ToneKonva\n              color={item.color}\n              x={this.props.center.x}\n              y={this.props.center.y}\n              offset={item.offset}\n              radius={item.radius}\n              attachedLoop={item.attachedLoop}\n              sound={item.sound}\n              duration={item.duration}\n              strokeWidth={item.strokeWidth}\n              id={item.id}\n              rotation={item.rotation}\n              ref={(node) => { this.child = node; }}\n            />\n          );\n        })} */}\n      </Layer>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tones: state.tones,\n    loops: state.loops,\n    center: state.shared.center\n  };\n}\n\nexport default connect(mapStateToProps)(MountedTones);\n"]},"metadata":{},"sourceType":"module"}