{"ast":null,"code":"var _jsxFileName = \"/Users/garrett/repos/soundloop/src/components/MuteButton.js\";\nimport React from \"react\";\nimport \"../styles/index.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faVolumeMute, faVolumeUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { toggleMute, toggleUnmute } from \"../actions/shared\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"@material-ui/core/Slider\";\nimport VolumeOff from \"@material-ui/icons/VolumeOff\";\nimport VolumeUp from \"@material-ui/icons/VolumeUp\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { updateVolume } from \"../actions/shared\"; // const MuteButtonStyle = {\n//   color: \"#692d55\",\n//   position: \"relative\",\n//   margin: \"0 auto 0 0 \"\n// };\n\nconst VolButton = {\n  color: \"#692d55\",\n  position: \"relative\",\n  float: \"right\",\n  padding: \"0 2rem 0rem 2rem\"\n};\nconst VolumeSlider = withStyles({\n  root: {\n    color: \"#692D54\",\n    height: 2\n  },\n  thumb: {\n    width: 15,\n    height: 15,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow: \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)\",\n      backgroundColor: \"#692D54\" // Reset on touch devices, it doesn't add specificity\n\n    }\n  },\n  // active: {},\n  track: {\n    height: 4,\n    borderRadius: 4\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4\n  }\n})(Slider);\n\nclass MuteButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 100\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleMute = this.handleMute.bind(this);\n    this.handleUnmute = this.handleUnmute.bind(this);\n  }\n\n  handleChange(event, newValue) {\n    if (newValue === 0) {\n      this.props.dispatch(toggleMute());\n    } else if (this.state.value === 0 && newValue !== 0) {\n      this.props.dispatch(toggleUnmute());\n    }\n\n    this.props.dispatch(updateVolume(newValue));\n    this.setState({\n      value: newValue\n    });\n  }\n\n  handleMute() {\n    this.props.dispatch(toggleMute());\n    this.setState({\n      value: 0\n    });\n  }\n\n  handleUnmute() {\n    this.props.dispatch(toggleUnmute());\n    this.setState({\n      value: 50\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.props.muted ? React.createElement(VolumeOff, {\n      style: VolButton,\n      onClick: () => this.handleUnmute(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }) : React.createElement(VolumeUp, {\n      style: VolButton,\n      onClick: () => this.handleMute(),\n      style: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        paddingLeft: \"0.5rem\",\n        width: \"100px\",\n        float: \"right\",\n        color: \"#692d55\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(VolumeSlider, {\n      defaultValue: 50,\n      value: this.state.value,\n      onChange: this.handleChange,\n      \"aria-labelledby\": \"continuous-slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), \" \"));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    muted: state.shared.muted\n  };\n}\n\nexport default connect(mapStateToProps)(MuteButton);","map":{"version":3,"sources":["/Users/garrett/repos/soundloop/src/components/MuteButton.js"],"names":["React","FontAwesomeIcon","faVolumeMute","faVolumeUp","connect","toggleMute","toggleUnmute","Toolbar","Grid","Slider","VolumeOff","VolumeUp","withStyles","makeStyles","updateVolume","VolButton","color","position","float","padding","VolumeSlider","root","height","thumb","width","boxShadow","backgroundColor","track","borderRadius","rail","MuteButton","Component","constructor","props","state","value","handleChange","bind","handleMute","handleUnmute","event","newValue","dispatch","setState","render","muted","paddingLeft","mapStateToProps","shared"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../styles/index.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faVolumeMute, faVolumeUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { toggleMute, toggleUnmute } from \"../actions/shared\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"@material-ui/core/Slider\";\nimport VolumeOff from \"@material-ui/icons/VolumeOff\";\nimport VolumeUp from \"@material-ui/icons/VolumeUp\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { updateVolume } from \"../actions/shared\";\n// const MuteButtonStyle = {\n//   color: \"#692d55\",\n//   position: \"relative\",\n//   margin: \"0 auto 0 0 \"\n// };\n\nconst VolButton = {\n  color: \"#692d55\",\n  position: \"relative\",\n  float: \"right\",\n  padding: \"0 2rem 0rem 2rem\"\n};\n\nconst VolumeSlider = withStyles({\n  root: {\n    color: \"#692D54\",\n    height: 2\n  },\n  thumb: {\n    width: 15,\n    height: 15,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow:\n        \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)\",\n\n      backgroundColor: \"#692D54\"\n\n      // Reset on touch devices, it doesn't add specificity\n    }\n  },\n  // active: {},\n  track: {\n    height: 4,\n    borderRadius: 4\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4\n  }\n})(Slider);\nclass MuteButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: 100 };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleMute = this.handleMute.bind(this);\n    this.handleUnmute = this.handleUnmute.bind(this);\n  }\n  handleChange(event, newValue) {\n    if (newValue === 0) {\n      this.props.dispatch(toggleMute());\n    } else if (this.state.value === 0 && newValue !== 0) {\n      this.props.dispatch(toggleUnmute());\n    }\n    this.props.dispatch(updateVolume(newValue));\n    this.setState({ value: newValue });\n  }\n\n  handleMute() {\n    this.props.dispatch(toggleMute());\n    this.setState({ value: 0 });\n  }\n\n  handleUnmute() {\n    this.props.dispatch(toggleUnmute());\n    this.setState({ value: 50 });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.muted ? (\n          <VolumeOff style={VolButton} onClick={() => this.handleUnmute()} />\n        ) : (\n          <VolumeUp\n            style={VolButton}\n            onClick={() => this.handleMute()}\n            style={{}}\n          />\n        )}\n\n        <div\n          style={{\n            paddingLeft: \"0.5rem\",\n            width: \"100px\",\n            float: \"right\",\n            color: \"#692d55\"\n          }}\n        >\n          <VolumeSlider\n            defaultValue={50}\n            value={this.state.value}\n            onChange={this.handleChange}\n            aria-labelledby=\"continuous-slider\"\n          />{\" \"}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    muted: state.shared.muted\n  };\n}\n\nexport default connect(mapStateToProps)(MuteButton);\n"]},"metadata":{},"sourceType":"module"}