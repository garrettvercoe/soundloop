{"ast":null,"code":"import _objectSpread from \"/Users/garrett/repos/soundloop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_LOOP, UPDATE_LOOP, ACTIVATE_LOOP } from \"../actions/loops\";\nimport { TRASH_ALL } from \"../actions/shared\";\nlet nextLoopId = 0;\nexport default function loops(state = [], action) {\n  switch (action.type) {\n    case ADD_LOOP:\n      return [...state, {\n        id: nextLoopId++,\n        radius: action.radius,\n        speed: 20000 / action.radius,\n        rotation: action.rotation,\n        active: action.active\n      }];\n\n    case TRASH_ALL:\n      nextLoopId = 0;\n      return [];\n\n    case UPDATE_LOOP:\n      var id = action.id;\n      return [...state.slice(0, id), _objectSpread({}, state[id], {\n        rotation: action.rotation\n      }), ...state.slice(id + 1)];\n\n    case ACTIVATE_LOOP:\n      return [...state.slice(0, action.id), _objectSpread({}, state[action.id], {\n        active: action.active,\n        stroke: action.stroke\n      }), ...state.slice(id + 1)];\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/garrett/repos/soundloop/src/reducers/loops.js"],"names":["ADD_LOOP","UPDATE_LOOP","ACTIVATE_LOOP","TRASH_ALL","nextLoopId","loops","state","action","type","id","radius","speed","rotation","active","slice","stroke"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,aAAhC,QAAqD,kBAArD;AAEA,SAASC,SAAT,QAA0B,mBAA1B;AACA,IAAIC,UAAU,GAAG,CAAjB;AACA,eAAe,SAASC,KAAT,CAAeC,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,QAAL;AACE,aAAO,CACL,GAAGM,KADE,EAEL;AACEG,QAAAA,EAAE,EAAEL,UAAU,EADhB;AAEEM,QAAAA,MAAM,EAAEH,MAAM,CAACG,MAFjB;AAGEC,QAAAA,KAAK,EAAE,QAAQJ,MAAM,CAACG,MAHxB;AAIEE,QAAAA,QAAQ,EAAEL,MAAM,CAACK,QAJnB;AAKEC,QAAAA,MAAM,EAAEN,MAAM,CAACM;AALjB,OAFK,CAAP;;AAWF,SAAKV,SAAL;AACEC,MAAAA,UAAU,GAAG,CAAb;AACA,aAAO,EAAP;;AAEF,SAAKH,WAAL;AACE,UAAIQ,EAAE,GAAGF,MAAM,CAACE,EAAhB;AACA,aAAO,CACL,GAAGH,KAAK,CAACQ,KAAN,CAAY,CAAZ,EAAeL,EAAf,CADE,oBAGAH,KAAK,CAACG,EAAD,CAHL;AAIHG,QAAAA,QAAQ,EAAEL,MAAM,CAACK;AAJd,UAML,GAAGN,KAAK,CAACQ,KAAN,CAAYL,EAAE,GAAG,CAAjB,CANE,CAAP;;AASF,SAAKP,aAAL;AACE,aAAO,CACL,GAAGI,KAAK,CAACQ,KAAN,CAAY,CAAZ,EAAeP,MAAM,CAACE,EAAtB,CADE,oBAGAH,KAAK,CAACC,MAAM,CAACE,EAAR,CAHL;AAIHI,QAAAA,MAAM,EAAEN,MAAM,CAACM,MAJZ;AAKHE,QAAAA,MAAM,EAAER,MAAM,CAACQ;AALZ,UAOL,GAAGT,KAAK,CAACQ,KAAN,CAAYL,EAAE,GAAG,CAAjB,CAPE,CAAP;;AAUF;AACE,aAAOH,KAAP;AAxCJ;AA0CD","sourcesContent":["import { ADD_LOOP, UPDATE_LOOP, ACTIVATE_LOOP } from \"../actions/loops\";\n\nimport { TRASH_ALL } from \"../actions/shared\";\nlet nextLoopId = 0;\nexport default function loops(state = [], action) {\n  switch (action.type) {\n    case ADD_LOOP:\n      return [\n        ...state,\n        {\n          id: nextLoopId++,\n          radius: action.radius,\n          speed: 20000 / action.radius,\n          rotation: action.rotation,\n          active: action.active\n        }\n      ];\n\n    case TRASH_ALL:\n      nextLoopId = 0;\n      return [];\n\n    case UPDATE_LOOP:\n      var id = action.id;\n      return [\n        ...state.slice(0, id),\n        {\n          ...state[id],\n          rotation: action.rotation\n        },\n        ...state.slice(id + 1)\n      ];\n\n    case ACTIVATE_LOOP:\n      return [\n        ...state.slice(0, action.id),\n        {\n          ...state[action.id],\n          active: action.active,\n          stroke: action.stroke\n        },\n        ...state.slice(id + 1)\n      ];\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}