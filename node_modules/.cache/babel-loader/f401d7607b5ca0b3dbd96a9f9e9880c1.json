{"ast":null,"code":"var _jsxFileName = \"/Users/ericduong/Documents/repos/soundloop/src/components/LoopKonva.js\";\nimport React from \"react\";\nimport { Circle } from \"react-konva\";\nimport { connect } from \"react-redux\";\nimport { addTone } from \"../actions/tones\";\n\nclass LoopKonva extends React.Component {\n  findAngleCoord(cx, cy, angle, distance) {\n    const x2 = cx - Math.cos(angle) * distance;\n    const y2 = cy + Math.sin(angle) * distance;\n    return {\n      x: x2,\n      y: y2\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.mode === \"angular\") {\n      var numTones = 16;\n      var interval = 2 * Math.PI / numTones;\n      var currAngle = 0;\n      console.log(\"ANGULARRR\");\n\n      for (var i = 0; i < numTones; i++) {\n        var coords = this.findAngleCoord(this.props.center.x, this.props.center.y, currAngle, this.props.radius);\n        this.props.dispatch(addTone(\"transparent\", \"#fff\", 1.5, coords.x - this.props.center.x, coords.y - this.props.center.y, this.props.id, this.props.screenHeight / 50, null, 0));\n        currAngle = currAngle + interval;\n      }\n    } else {\n      var numTones = Math.pow(2, 5 - this.props.id);\n      var interval = 2 * Math.PI / numTones;\n      var currAngle = 0;\n\n      for (var i = 0; i < numTones; i++) {\n        var coords = this.findAngleCoord(this.props.center.x, this.props.center.y, currAngle, this.props.radius);\n        this.props.dispatch(addTone(\"transparent\", \"#fff\", 1.5, coords.x - this.props.center.x, coords.y - this.props.center.y, this.props.id, this.props.screenHeight / 50, null, 0));\n        currAngle = currAngle + interval;\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.mode !== this.props.mode) {\n      console.log(\"HERE NOW\");\n\n      if (this.props.mode === \"angular\") {\n        var numTones = 16;\n        var interval = 2 * Math.PI / numTones;\n        var currAngle = 0;\n\n        for (var i = 0; i < numTones; i++) {\n          var coords = this.findAngleCoord(this.props.center.x, this.props.center.y, currAngle, this.props.radius);\n          console.log(\"ANGULARRR\");\n          this.props.dispatch(addTone(\"transparent\", \"#fff\", 1.5, coords.x - this.props.center.x, coords.y - this.props.center.y, this.props.id, this.props.screenHeight / 50, null, 0));\n          currAngle = currAngle + interval;\n        }\n      } else {\n        var numTones = Math.pow(2, 5 - this.props.id);\n        var interval = 2 * Math.PI / numTones;\n        var currAngle = 0;\n\n        for (var i = 0; i < numTones; i++) {\n          var coords = this.findAngleCoord(this.props.center.x, this.props.center.y, currAngle, this.props.radius);\n          this.props.dispatch(addTone(\"transparent\", \"#fff\", 1.5, coords.x - this.props.center.x, coords.y - this.props.center.y, this.props.id, this.props.screenHeight / 50, null, 0));\n          currAngle = currAngle + interval;\n        }\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(Circle, {\n      x: this.props.center.x,\n      y: this.props.center.y,\n      radius: this.props.radius,\n      fill: \"transparent\",\n      stroke: this.props.stroke,\n      strokeWidth: 1.5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    });\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    center: state.shared.center,\n    shared: state.shared,\n    mode: state.shared.mode,\n    screenHeight: state.shared.screenHeight\n  };\n}\n\nexport default connect(mapStateToProps)(LoopKonva);","map":{"version":3,"sources":["/Users/ericduong/Documents/repos/soundloop/src/components/LoopKonva.js"],"names":["React","Circle","connect","addTone","LoopKonva","Component","findAngleCoord","cx","cy","angle","distance","x2","Math","cos","y2","sin","x","y","componentDidMount","props","mode","numTones","interval","PI","currAngle","console","log","i","coords","center","radius","dispatch","id","screenHeight","pow","componentDidUpdate","prevProps","render","stroke","mapStateToProps","state","shared"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Circle } from \"react-konva\";\nimport { connect } from \"react-redux\";\nimport { addTone } from \"../actions/tones\";\n\nclass LoopKonva extends React.Component {\n  findAngleCoord(cx, cy, angle, distance) {\n    const x2 = cx - Math.cos(angle) * distance;\n    const y2 = cy + Math.sin(angle) * distance;\n    return { x: x2, y: y2 };\n  }\n\n  componentDidMount() {\n    if (this.props.mode === \"angular\"){\n      var numTones = 16;\n      var interval = (2 * Math.PI) / numTones;\n      var currAngle = 0;\n      console.log(\"ANGULARRR\");\n      for (var i = 0; i < numTones; i++) {\n        var coords = this.findAngleCoord(\n          this.props.center.x,\n          this.props.center.y,\n          currAngle,\n          this.props.radius\n        );\n        \n        this.props.dispatch(\n          addTone(\n            \"transparent\",\n            \"#fff\",\n            1.5,\n            coords.x - this.props.center.x,\n            coords.y - this.props.center.y,\n            this.props.id,\n            this.props.screenHeight/50,\n            null,\n            0\n          )\n        );\n        currAngle = currAngle + interval;\n      }\n    } else {\n    var numTones = Math.pow(2, 5 - this.props.id);\n    var interval = (2 * Math.PI) / numTones;\n    var currAngle = 0;\n    for (var i = 0; i < numTones; i++) {\n      var coords = this.findAngleCoord(\n        this.props.center.x,\n        this.props.center.y,\n        currAngle,\n        this.props.radius\n      );\n\n      this.props.dispatch(\n        addTone(\n          \"transparent\",\n          \"#fff\",\n          1.5,\n          coords.x - this.props.center.x,\n          coords.y - this.props.center.y,\n          this.props.id,\n          this.props.screenHeight/50,\n          null,\n          0\n        )\n      );\n      currAngle = currAngle + interval;\n    }\n  }\n}\n\ncomponentDidUpdate(prevProps){\n  if (prevProps.mode !== this.props.mode){\n    console.log(\"HERE NOW\")\n    if (this.props.mode === \"angular\"){\n      var numTones = 16;\n      var interval = (2 * Math.PI) / numTones;\n      var currAngle = 0;\n      for (var i = 0; i < numTones; i++) {\n        var coords = this.findAngleCoord(\n          this.props.center.x,\n          this.props.center.y,\n          currAngle,\n          this.props.radius\n        );\n        console.log(\"ANGULARRR\");\n        this.props.dispatch(\n          addTone(\n            \"transparent\",\n            \"#fff\",\n            1.5,\n            coords.x - this.props.center.x,\n            coords.y - this.props.center.y,\n            this.props.id,\n            this.props.screenHeight/50,\n            null,\n            0\n          )\n        );\n        currAngle = currAngle + interval;\n    }\n  } else {\n    var numTones = Math.pow(2, 5 - this.props.id);\n    var interval = (2 * Math.PI) / numTones;\n    var currAngle = 0;\n    for (var i = 0; i < numTones; i++) {\n      var coords = this.findAngleCoord(\n        this.props.center.x,\n        this.props.center.y,\n        currAngle,\n        this.props.radius\n      );\n\n      this.props.dispatch(\n        addTone(\n          \"transparent\",\n          \"#fff\",\n          1.5,\n          coords.x - this.props.center.x,\n          coords.y - this.props.center.y,\n          this.props.id,\n          this.props.screenHeight/50,\n          null,\n          0\n        )\n      );\n      currAngle = currAngle + interval;\n    }\n  }\n  }\n}\n\n  render() {\n    return (\n      <Circle\n        x={this.props.center.x}\n        y={this.props.center.y}\n        radius={this.props.radius}\n        fill={\"transparent\"}\n        stroke={this.props.stroke}\n        strokeWidth={1.5}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    center: state.shared.center,\n    shared: state.shared,\n    mode: state.shared.mode,\n    screenHeight: state.shared.screenHeight\n  };\n}\n\nexport default connect(mapStateToProps)(LoopKonva);\n"]},"metadata":{},"sourceType":"module"}