{"ast":null,"code":"var _jsxFileName = \"/Users/garrett/repos/soundloop/src/components/PlayButton.js\";\nimport React from \"react\";\nimport \"../styles/index.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlayCircle, faPauseCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { togglePlay, toggleStop } from \"../actions/shared\";\nconst PlayButtonStyle = {\n  color: \"#692d55\",\n  position: \"relative\",\n  margin: \"0 auto\"\n};\n\nclass PlayButton extends React.Component {\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.props.playing ? React.createElement(FontAwesomeIcon, {\n      className: \"inl-blk fa-4x\",\n      style: PlayButtonStyle,\n      icon: faPauseCircle,\n      onClick: () => this.props.dispatch(toggleStop()),\n      onKeyUp: e => {\n        if (e.keyCode === 32) {\n          {\n            console.log(\"ugh\");\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }) : React.createElement(FontAwesomeIcon, {\n      className: \"inl-blk fa-4x\",\n      style: PlayButtonStyle,\n      icon: faPlayCircle,\n      onClick: () => this.props.dispatch(togglePlay()),\n      onKeyUp: e => {\n        if (e.keyCode === 32) {\n          console.log(\"ugh\");\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  console.log(state); // state\n\n  return {\n    playing: state.shared.playing\n  };\n}\n\nexport default connect(mapStateToProps)(PlayButton);","map":{"version":3,"sources":["/Users/garrett/repos/soundloop/src/components/PlayButton.js"],"names":["React","FontAwesomeIcon","faPlayCircle","faPauseCircle","connect","togglePlay","toggleStop","PlayButtonStyle","color","position","margin","PlayButton","Component","render","props","playing","dispatch","e","keyCode","console","log","mapStateToProps","state","shared"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,mCAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,mBAAvC;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,KAAK,EAAE,SADe;AAEtBC,EAAAA,QAAQ,EAAE,UAFY;AAGtBC,EAAAA,MAAM,EAAE;AAHc,CAAxB;;AAMA,MAAMC,UAAN,SAAyBX,KAAK,CAACY,SAA/B,CAAyC;AACvCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,OAAX,GACC,oBAAC,eAAD;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,KAAK,EAAER,eAFT;AAGE,MAAA,IAAI,EAAEJ,aAHR;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKW,KAAL,CAAWE,QAAX,CAAoBV,UAAU,EAA9B,CAJjB;AAKE,MAAA,OAAO,EAAEW,CAAC,IAAI;AACZ,YAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpB;AACEC,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD;AACF;AACF,OAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAeC,oBAAC,eAAD;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,KAAK,EAAEb,eAFT;AAGE,MAAA,IAAI,EAAEL,YAHR;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKY,KAAL,CAAWE,QAAX,CAAoBX,UAAU,EAA9B,CAJjB;AAKE,MAAA,OAAO,EAAEY,CAAC,IAAI;AACZ,YAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD;AACF,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,CADF;AA+BD;;AAjCsC;;AAoCzC,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9BH,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EAD8B,CACV;;AACpB,SAAO;AACLP,IAAAA,OAAO,EAAEO,KAAK,CAACC,MAAN,CAAaR;AADjB,GAAP;AAGD;;AAED,eAAeX,OAAO,CAACiB,eAAD,CAAP,CAAyBV,UAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport \"../styles/index.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlayCircle, faPauseCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { togglePlay, toggleStop } from \"../actions/shared\";\n\nconst PlayButtonStyle = {\n  color: \"#692d55\",\n  position: \"relative\",\n  margin: \"0 auto\"\n};\n\nclass PlayButton extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.playing ? (\n          <FontAwesomeIcon\n            className=\"inl-blk fa-4x\"\n            style={PlayButtonStyle}\n            icon={faPauseCircle}\n            onClick={() => this.props.dispatch(toggleStop())}\n            onKeyUp={e => {\n              if (e.keyCode === 32) {\n                {\n                  console.log(\"ugh\");\n                }\n              }\n            }}\n          />\n        ) : (\n          <FontAwesomeIcon\n            className=\"inl-blk fa-4x\"\n            style={PlayButtonStyle}\n            icon={faPlayCircle}\n            onClick={() => this.props.dispatch(togglePlay())}\n            onKeyUp={e => {\n              if (e.keyCode === 32) {\n                console.log(\"ugh\");\n              }\n            }}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  console.log(state); // state\n  return {\n    playing: state.shared.playing\n  };\n}\n\nexport default connect(mapStateToProps)(PlayButton);\n"]},"metadata":{},"sourceType":"module"}