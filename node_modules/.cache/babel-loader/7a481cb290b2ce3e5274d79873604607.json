{"ast":null,"code":"var _jsxFileName = \"/Users/ericduong/Documents/development/soundloop/src/App.js\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Text, Circle } from \"react-konva\";\nimport Konva from \"konva\";\nimport Tone from \"tone\";\n\nclass ColoredCirc extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      color: \"green\"\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        color: Konva.Util.getRandomColor()\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Circle, {\n      x: 20,\n      y: 20,\n      width: 900,\n      height: 900,\n      fill: this.state.color,\n      shadowBlur: 5,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default class App extends Component {\n  render() {\n    // Stage is a div container\n    // Layer is actual canvas element (so you may have several canvases in the stage)\n    // And then we have canvas shapes inside the Layer\n    return React.createElement(Stage, {\n      width: window.innerWidth,\n      height: window.innerHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Text, {\n      text: \"Try click on rect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(ColoredRect, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/ericduong/Documents/development/soundloop/src/App.js"],"names":["React","Component","render","Stage","Layer","Rect","Text","Circle","Konva","Tone","ColoredCirc","state","color","handleClick","setState","Util","getRandomColor","App","window","innerWidth","innerHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,MAAnC,QAAiD,aAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,WAAN,SAA0BV,KAAK,CAACC,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCU,KADwC,GAChC;AACNC,MAAAA,KAAK,EAAE;AADD,KADgC;;AAAA,SAIxCC,WAJwC,GAI1B,MAAM;AAClB,WAAKC,QAAL,CAAc;AACZF,QAAAA,KAAK,EAAEJ,KAAK,CAACO,IAAN,CAAWC,cAAX;AADK,OAAd;AAGD,KARuC;AAAA;;AASxCd,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AACE,MAAA,CAAC,EAAE,EADL;AAEE,MAAA,CAAC,EAAE,EAFL;AAGE,MAAA,KAAK,EAAE,GAHT;AAIE,MAAA,MAAM,EAAE,GAJV;AAKE,MAAA,IAAI,EAAE,KAAKS,KAAL,CAAWC,KALnB;AAME,MAAA,UAAU,EAAE,CANd;AAOE,MAAA,OAAO,EAAE,KAAKC,WAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD;;AArBuC;;AAwB1C,eAAe,MAAMI,GAAN,SAAkBhB,SAAlB,CAA4B;AACzCC,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA,WACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEgB,MAAM,CAACC,UAArB;AAAiC,MAAA,MAAM,EAAED,MAAM,CAACE,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAQD;;AAbwC","sourcesContent":["import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Text, Circle } from \"react-konva\";\nimport Konva from \"konva\";\nimport Tone from \"tone\";\n\nclass ColoredCirc extends React.Component {\n  state = {\n    color: \"green\"\n  };\n  handleClick = () => {\n    this.setState({\n      color: Konva.Util.getRandomColor()\n    });\n  };\n  render() {\n    return (\n      <Circle\n        x={20}\n        y={20}\n        width={900}\n        height={900}\n        fill={this.state.color}\n        shadowBlur={5}\n        onClick={this.handleClick}\n      />\n    );\n  }\n}\n\nexport default class App extends Component {\n  render() {\n    // Stage is a div container\n    // Layer is actual canvas element (so you may have several canvases in the stage)\n    // And then we have canvas shapes inside the Layer\n    return (\n      <Stage width={window.innerWidth} height={window.innerHeight}>\n        <Layer>\n          <Text text=\"Try click on rect\" />\n          <ColoredRect />\n        </Layer>\n      </Stage>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}