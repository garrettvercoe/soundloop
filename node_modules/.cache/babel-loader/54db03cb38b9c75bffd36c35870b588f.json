{"ast":null,"code":"import loops from \"./loops\";\nimport tones from \"./tones\";\nimport shared from \"./shared\";\nimport cord from \"./cord\";\nimport file from \"./file\";\nimport cursor from \"./cursor\";\nimport { combineReducers } from \"redux\";\nconst appReducer = combineReducers({\n  loops,\n  tones,\n  cord,\n  shared,\n  file,\n  cursor\n});\nexport default function (state, action) {\n  if (action.type === \"IMPORT_FILE\") {\n    state.tones = action.data.tones;\n    state.loops = action.data.loops;\n    state.shared = {\n      playing: false,\n      center: {\n        x: 380 + (window.innerWidth - 380) / 2,\n        y: window.innerHeight / 2\n      },\n      screenWidth: window.innerWidth,\n      screenHeight: window.innerHeight,\n      muted: false,\n      mode: \"linear\",\n      octave: 4,\n      selectedSustain: action.data.shared.selectedSustain,\n      fileName: action.data.shared.fileName,\n      volume: 0,\n      tempo: action.data.shared.tempo,\n      toneSizes: {\n        \"32n\": Math.round(window.innerHeight / 92),\n        \"16n\": Math.round(window.innerHeight / 70),\n        \"8n\": Math.round(window.innerHeight / 60),\n        \"4n\": Math.round(window.innerHeight / 52),\n        \"2n\": Math.round(window.innerHeight / 43),\n        \"1m\": Math.round(window.innerHeight / 35)\n      },\n      sounds: [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"]\n    };\n    state.cursor = {\n      sound: \"C\",\n      color: \"transparent\",\n      mode: \"empty\"\n    };\n    state.cord = {\n      sounds: []\n    };\n  }\n\n  return appReducer(state, action);\n}","map":{"version":3,"sources":["/Users/garrett/repos/soundloop/src/reducers/index.js"],"names":["loops","tones","shared","cord","file","cursor","combineReducers","appReducer","state","action","type","data","playing","center","x","window","innerWidth","y","innerHeight","screenWidth","screenHeight","muted","mode","octave","selectedSustain","fileName","volume","tempo","toneSizes","Math","round","sounds","sound","color"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,MAAMC,UAAU,GAAGD,eAAe,CAAC;AACjCN,EAAAA,KADiC;AAEjCC,EAAAA,KAFiC;AAGjCE,EAAAA,IAHiC;AAIjCD,EAAAA,MAJiC;AAKjCE,EAAAA,IALiC;AAMjCC,EAAAA;AANiC,CAAD,CAAlC;AASA,eAAe,UAASG,KAAT,EAAgBC,MAAhB,EAAwB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACjCF,IAAAA,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACE,IAAP,CAAYV,KAA1B;AACAO,IAAAA,KAAK,CAACR,KAAN,GAAcS,MAAM,CAACE,IAAP,CAAYX,KAA1B;AACAQ,IAAAA,KAAK,CAACN,MAAN,GAAe;AACbU,MAAAA,OAAO,EAAE,KADI;AAEbC,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAE,MAAM,CAACC,MAAM,CAACC,UAAP,GAAoB,GAArB,IAA4B,CAD/B;AAENC,QAAAA,CAAC,EAAEF,MAAM,CAACG,WAAP,GAAqB;AAFlB,OAFK;AAMbC,MAAAA,WAAW,EAAEJ,MAAM,CAACC,UANP;AAObI,MAAAA,YAAY,EAAEL,MAAM,CAACG,WAPR;AAQbG,MAAAA,KAAK,EAAE,KARM;AASbC,MAAAA,IAAI,EAAE,QATO;AAUbC,MAAAA,MAAM,EAAE,CAVK;AAWbC,MAAAA,eAAe,EAAEf,MAAM,CAACE,IAAP,CAAYT,MAAZ,CAAmBsB,eAXvB;AAYbC,MAAAA,QAAQ,EAAEhB,MAAM,CAACE,IAAP,CAAYT,MAAZ,CAAmBuB,QAZhB;AAabC,MAAAA,MAAM,EAAE,CAbK;AAcbC,MAAAA,KAAK,EAAElB,MAAM,CAACE,IAAP,CAAYT,MAAZ,CAAmByB,KAdb;AAebC,MAAAA,SAAS,EAAE;AACT,eAAOC,IAAI,CAACC,KAAL,CAAWf,MAAM,CAACG,WAAP,GAAqB,EAAhC,CADE;AAET,eAAOW,IAAI,CAACC,KAAL,CAAWf,MAAM,CAACG,WAAP,GAAqB,EAAhC,CAFE;AAGT,cAAMW,IAAI,CAACC,KAAL,CAAWf,MAAM,CAACG,WAAP,GAAqB,EAAhC,CAHG;AAIT,cAAMW,IAAI,CAACC,KAAL,CAAWf,MAAM,CAACG,WAAP,GAAqB,EAAhC,CAJG;AAKT,cAAMW,IAAI,CAACC,KAAL,CAAWf,MAAM,CAACG,WAAP,GAAqB,EAAhC,CALG;AAMT,cAAMW,IAAI,CAACC,KAAL,CAAWf,MAAM,CAACG,WAAP,GAAqB,EAAhC;AANG,OAfE;AAuBba,MAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,IAAjB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,IAAjC,EAAuC,GAAvC,EAA4C,IAA5C,EAAkD,GAAlD,EAAuD,IAAvD,EAA6D,GAA7D;AAvBK,KAAf;AAyBAvB,IAAAA,KAAK,CAACH,MAAN,GAAe;AACb2B,MAAAA,KAAK,EAAE,GADM;AAEbC,MAAAA,KAAK,EAAE,aAFM;AAGbX,MAAAA,IAAI,EAAE;AAHO,KAAf;AAMAd,IAAAA,KAAK,CAACL,IAAN,GAAa;AAAE4B,MAAAA,MAAM,EAAE;AAAV,KAAb;AACD;;AACD,SAAOxB,UAAU,CAACC,KAAD,EAAQC,MAAR,CAAjB;AACD","sourcesContent":["import loops from \"./loops\";\nimport tones from \"./tones\";\nimport shared from \"./shared\";\nimport cord from \"./cord\";\nimport file from \"./file\";\nimport cursor from \"./cursor\";\nimport { combineReducers } from \"redux\";\n\nconst appReducer = combineReducers({\n  loops,\n  tones,\n  cord,\n  shared,\n  file,\n  cursor\n});\n\nexport default function(state, action) {\n  if (action.type === \"IMPORT_FILE\") {\n    state.tones = action.data.tones;\n    state.loops = action.data.loops;\n    state.shared = {\n      playing: false,\n      center: {\n        x: 380 + (window.innerWidth - 380) / 2,\n        y: window.innerHeight / 2\n      },\n      screenWidth: window.innerWidth,\n      screenHeight: window.innerHeight,\n      muted: false,\n      mode: \"linear\",\n      octave: 4,\n      selectedSustain: action.data.shared.selectedSustain,\n      fileName: action.data.shared.fileName,\n      volume: 0,\n      tempo: action.data.shared.tempo,\n      toneSizes: {\n        \"32n\": Math.round(window.innerHeight / 92),\n        \"16n\": Math.round(window.innerHeight / 70),\n        \"8n\": Math.round(window.innerHeight / 60),\n        \"4n\": Math.round(window.innerHeight / 52),\n        \"2n\": Math.round(window.innerHeight / 43),\n        \"1m\": Math.round(window.innerHeight / 35)\n      },\n      sounds: [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"]\n    };\n    state.cursor = {\n      sound: \"C\",\n      color: \"transparent\",\n      mode: \"empty\"\n    };\n\n    state.cord = { sounds: [] };\n  }\n  return appReducer(state, action);\n}\n"]},"metadata":{},"sourceType":"module"}