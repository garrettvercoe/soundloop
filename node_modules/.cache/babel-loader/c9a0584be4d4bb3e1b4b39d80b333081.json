{"ast":null,"code":"var _jsxFileName = \"/Users/garrett/repos/soundloop/src/components/SoundEffects.js\";\nimport React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { tsConstructorType } from \"@babel/types\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nexport default class SoundEffects extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Chorus: false,\n      AutoPanner: false,\n      AutoWah: false,\n      PitchShift: false,\n      StereoWidener: false,\n      Tremolo: false,\n      Effect: false,\n      PingPongDelay: false,\n      MidSideEffect: false,\n      Convolver: false,\n      StereoFeedbackEffect: false,\n      Chebyshev: false,\n      StereoEffect: false,\n      Vibrato: false,\n      BitCrusher: false,\n      StereoXFeedbackEffect: false,\n      FeedbackEffect: false,\n      Reverb: false,\n      Distortion: false,\n      JCReverb: false,\n      Freeverb: false,\n      AutoFilter: false,\n      FeedbackDelay: false,\n      Phaser: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(item) {\n    this.setState({\n      item: !this.state[item]\n    });\n  }\n\n  render() {\n    var options = [\"Chorus\", \"AutoPanner\", \"AutoWah\", \"PitchShift\", \"StereoWidener\", \"Tremolo\", \"Effect\", \"PingPongDelay\", \"MidSideEffect\", \"Convolver\", \"StereoFeedbackEffect\", \"Chebyshev\", \"StereoEffect\", \"Vibrato\", \"BitCrusher\", \"StereoXFeedbackEffect\", \"FeedbackEffect\", \"Reverb\", \"Distortion\", \"JCReverb\", \"Freeverb\", \"AutoFilter\", \"FeedbackDelay\", \"Phaser\"];\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), options.map(item => React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: this.state[item],\n        onChange: () => this.handleChange(item),\n        value: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }),\n      label: \"Antoine Llorca\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/garrett/repos/soundloop/src/components/SoundEffects.js"],"names":["React","Checkbox","tsConstructorType","FormLabel","FormControl","FormGroup","FormControlLabel","FormHelperText","SoundEffects","Component","constructor","props","state","Chorus","AutoPanner","AutoWah","PitchShift","StereoWidener","Tremolo","Effect","PingPongDelay","MidSideEffect","Convolver","StereoFeedbackEffect","Chebyshev","StereoEffect","Vibrato","BitCrusher","StereoXFeedbackEffect","FeedbackEffect","Reverb","Distortion","JCReverb","Freeverb","AutoFilter","FeedbackDelay","Phaser","handleChange","bind","item","setState","render","options","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,eAAe,MAAMC,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA2C;AACxDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,UAAU,EAAE,KAFD;AAGXC,MAAAA,OAAO,EAAE,KAHE;AAIXC,MAAAA,UAAU,EAAE,KAJD;AAKXC,MAAAA,aAAa,EAAE,KALJ;AAMXC,MAAAA,OAAO,EAAE,KANE;AAOXC,MAAAA,MAAM,EAAE,KAPG;AAQXC,MAAAA,aAAa,EAAE,KARJ;AASXC,MAAAA,aAAa,EAAE,KATJ;AAUXC,MAAAA,SAAS,EAAE,KAVA;AAWXC,MAAAA,oBAAoB,EAAE,KAXX;AAYXC,MAAAA,SAAS,EAAE,KAZA;AAaXC,MAAAA,YAAY,EAAE,KAbH;AAcXC,MAAAA,OAAO,EAAE,KAdE;AAeXC,MAAAA,UAAU,EAAE,KAfD;AAgBXC,MAAAA,qBAAqB,EAAE,KAhBZ;AAiBXC,MAAAA,cAAc,EAAE,KAjBL;AAkBXC,MAAAA,MAAM,EAAE,KAlBG;AAmBXC,MAAAA,UAAU,EAAE,KAnBD;AAoBXC,MAAAA,QAAQ,EAAE,KApBC;AAqBXC,MAAAA,QAAQ,EAAE,KArBC;AAsBXC,MAAAA,UAAU,EAAE,KAtBD;AAuBXC,MAAAA,aAAa,EAAE,KAvBJ;AAwBXC,MAAAA,MAAM,EAAE;AAxBG,KAAb;AA2BA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACDD,EAAAA,YAAY,CAACE,IAAD,EAAO;AACjB,SAAKC,QAAL,CAAc;AAAED,MAAAA,IAAI,EAAE,CAAC,KAAK3B,KAAL,CAAW2B,IAAX;AAAT,KAAd;AACD;;AACDE,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,GAAG,CACZ,QADY,EAEZ,YAFY,EAGZ,SAHY,EAIZ,YAJY,EAKZ,eALY,EAMZ,SANY,EAOZ,QAPY,EAQZ,eARY,EASZ,eATY,EAUZ,WAVY,EAWZ,sBAXY,EAYZ,WAZY,EAaZ,cAbY,EAcZ,SAdY,EAeZ,YAfY,EAgBZ,uBAhBY,EAiBZ,gBAjBY,EAkBZ,QAlBY,EAmBZ,YAnBY,EAoBZ,UApBY,EAqBZ,UArBY,EAsBZ,YAtBY,EAuBZ,eAvBY,EAwBZ,QAxBY,CAAd;AA0BA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGA,OAAO,CAACC,GAAR,CAAYJ,IAAI,IACf,oBAAC,gBAAD;AACE,MAAA,OAAO,EACL,oBAAC,QAAD;AACE,QAAA,OAAO,EAAE,KAAK3B,KAAL,CAAW2B,IAAX,CADX;AAEE,QAAA,QAAQ,EAAE,MAAM,KAAKF,YAAL,CAAkBE,IAAlB,CAFlB;AAGE,QAAA,KAAK,EAAEA,IAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAQE,MAAA,KAAK,EAAC,gBARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CADF;AAiBD;;AA/EuD","sourcesContent":["import React from \"react\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { tsConstructorType } from \"@babel/types\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nexport default class SoundEffects extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Chorus: false,\n      AutoPanner: false,\n      AutoWah: false,\n      PitchShift: false,\n      StereoWidener: false,\n      Tremolo: false,\n      Effect: false,\n      PingPongDelay: false,\n      MidSideEffect: false,\n      Convolver: false,\n      StereoFeedbackEffect: false,\n      Chebyshev: false,\n      StereoEffect: false,\n      Vibrato: false,\n      BitCrusher: false,\n      StereoXFeedbackEffect: false,\n      FeedbackEffect: false,\n      Reverb: false,\n      Distortion: false,\n      JCReverb: false,\n      Freeverb: false,\n      AutoFilter: false,\n      FeedbackDelay: false,\n      Phaser: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(item) {\n    this.setState({ item: !this.state[item] });\n  }\n  render() {\n    var options = [\n      \"Chorus\",\n      \"AutoPanner\",\n      \"AutoWah\",\n      \"PitchShift\",\n      \"StereoWidener\",\n      \"Tremolo\",\n      \"Effect\",\n      \"PingPongDelay\",\n      \"MidSideEffect\",\n      \"Convolver\",\n      \"StereoFeedbackEffect\",\n      \"Chebyshev\",\n      \"StereoEffect\",\n      \"Vibrato\",\n      \"BitCrusher\",\n      \"StereoXFeedbackEffect\",\n      \"FeedbackEffect\",\n      \"Reverb\",\n      \"Distortion\",\n      \"JCReverb\",\n      \"Freeverb\",\n      \"AutoFilter\",\n      \"FeedbackDelay\",\n      \"Phaser\"\n    ];\n    return (\n      <React.Fragment>\n        <div />\n        {options.map(item => (\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={this.state[item]}\n                onChange={() => this.handleChange(item)}\n                value={item}\n              />\n            }\n            label=\"Antoine Llorca\"\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}