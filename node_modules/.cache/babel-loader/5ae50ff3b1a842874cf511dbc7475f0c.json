{"ast":null,"code":"var _jsxFileName = \"/Users/ericduong/Documents/repos/soundloop/src/components/ToneButton.js\";\nimport React from \"react\";\nimport \"../styles/index.css\";\nimport Draggable from \"react-draggable\"; // The default\n\nimport { connect } from \"react-redux\";\nimport { addTone } from \"../actions/tones\";\nimport { playTone } from \"../actions/cord\";\n\nclass ToneButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selector = React.createRef();\n    this.state = {\n      deltaPosition: {\n        x: 0,\n        y: 0\n      }\n    };\n    this.handleStop = this.handleStop.bind(this);\n    this.snap = this.snap.bind(this);\n    this.findSnapCoordinates = this.findSnapCoordinates.bind(this);\n    this.findClosestLoop = this.findClosestLoop.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  findClosestLoop(distToCenter) {\n    // iterate through loops array and compare radii\n    var acceptableRange = 50;\n    var loopArray = this.props.loops;\n    var id = 0;\n    var curr = loopArray[id].radius;\n    var diff = Math.abs(distToCenter - curr);\n\n    for (var i = 0; i < loopArray.length; i++) {\n      var newdiff = Math.abs(distToCenter - loopArray[i].radius);\n\n      if (newdiff < diff) {\n        diff = newdiff;\n        curr = loopArray[i].radius;\n        id = i;\n      }\n    }\n\n    if (diff < acceptableRange) {\n      return {\n        index: id,\n        value: curr\n      };\n    } else {\n      return null;\n    }\n  }\n\n  findSnapCoordinates(x1, y1, cx, cy, distance) {\n    var angle = Math.atan2(y1, x1);\n    const x2 = cx - Math.cos(angle) * distance;\n    const y2 = cy + Math.sin(angle) * distance;\n    return {\n      x: x2,\n      y: y2\n    };\n  }\n\n  findClosestLoopPt(a, b, id) {\n    console.log(this.props.loops[id]);\n    var min = {\n      x: 50,\n      y: 50\n    }; // reference the loop and then its points\n\n    for (var i = 0; i < this.props.loops[id][pts].length; i++) {\n      var pointX = this.props.loops[id][i].x;\n      var pointY = this.props.loops[id][i].y; // if coordinates of currently indexed point are less than min\n\n      var dist = Math.sqrt(pointX - a * pointX - a + (pointY - b * pointY - b));\n\n      if (dist < min) {\n        min.x = pointX;\n        min.y = pointY;\n      }\n    }\n\n    return min;\n  }\n\n  snap(x1, y1) {\n    const cx = window.innerWidth / 2;\n    const cy = window.innerHeight / 2;\n    var a = y1 - cy;\n    var b = x1 - cx; //c\n\n    var distToCenter = Math.sqrt(a * a + b * b);\n    var loopToSnap = this.findClosestLoop(distToCenter);\n\n    if (loopToSnap) {\n      // for each point in loopToSnap, dispatch on coord of pts\n      // replace findSnapCoordinats with findClosestLoopPt\n      //var snapCoords = this.findSnapCoordinates(a, b, cx, cy, loopToSnap.value);\n      var snapCoords = this.findClosestLoopPt(a, b, loopToSnap.index);\n      var newA = (snapCoords.y - cy) * -1;\n      var newB = snapCoords.x - cx;\n      this.props.dispatch(addTone(cx, cy, this.props.color, newA, newB, loopToSnap.index, 20, this.props.sound));\n    }\n  }\n\n  handleStop() {\n    this.rect = this.selector.current.getBoundingClientRect();\n    const x = this.rect.left;\n    const y = this.rect.top;\n    this.snap(x, y);\n    this.setState({\n      deltaPosition: {\n        x: 0,\n        y: 0\n      }\n    });\n  }\n\n  handleClick() {\n    this.props.dispatch(playTone(this.props.sound));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"hover-shadow\",\n      style: {\n        borderRadius: \"100%\",\n        border: \"2px solid\",\n        borderColor: this.props.color,\n        backgroundColor: \"transparent\",\n        width: \"2rem\",\n        height: \"2rem\",\n        position: \"absolute\",\n        outline: \"none\",\n        pointerEvents: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Draggable, {\n      position: this.state.deltaPosition,\n      onStop: this.handleStop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      ref: this.selector,\n      className: \"hover-shadow\",\n      onClick: this.handleClick,\n      style: {\n        borderRadius: \"100%\",\n        backgroundColor: this.props.color,\n        width: \"2rem\",\n        zIndex: 1,\n        height: \"2rem\",\n        border: \"none\",\n        outline: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  console.log(state); // state\n\n  return {\n    loops: state.loops\n  };\n}\n\nexport default connect(mapStateToProps)(ToneButton);","map":{"version":3,"sources":["/Users/ericduong/Documents/repos/soundloop/src/components/ToneButton.js"],"names":["React","Draggable","connect","addTone","playTone","ToneButton","Component","constructor","props","selector","createRef","state","deltaPosition","x","y","handleStop","bind","snap","findSnapCoordinates","findClosestLoop","handleClick","distToCenter","acceptableRange","loopArray","loops","id","curr","radius","diff","Math","abs","i","length","newdiff","index","value","x1","y1","cx","cy","distance","angle","atan2","x2","cos","y2","sin","findClosestLoopPt","a","b","console","log","min","pts","pointX","pointY","dist","sqrt","window","innerWidth","innerHeight","loopToSnap","snapCoords","newA","newB","dispatch","color","sound","rect","current","getBoundingClientRect","left","top","setState","render","borderRadius","border","borderColor","backgroundColor","width","height","position","outline","pointerEvents","zIndex","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../styles/index.css\";\n\nimport Draggable from \"react-draggable\"; // The default\nimport { connect } from \"react-redux\";\nimport { addTone } from \"../actions/tones\";\nimport { playTone } from \"../actions/cord\";\nclass ToneButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selector = React.createRef();\n    this.state = {\n      deltaPosition: {\n        x: 0,\n        y: 0\n      }\n    };\n    this.handleStop = this.handleStop.bind(this);\n    this.snap = this.snap.bind(this);\n    this.findSnapCoordinates = this.findSnapCoordinates.bind(this);\n    this.findClosestLoop = this.findClosestLoop.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  findClosestLoop(distToCenter) {\n    // iterate through loops array and compare radii\n    var acceptableRange = 50;\n    var loopArray = this.props.loops;\n    var id = 0;\n    var curr = loopArray[id].radius;\n    var diff = Math.abs(distToCenter - curr);\n\n    for (var i = 0; i < loopArray.length; i++) {\n      var newdiff = Math.abs(distToCenter - loopArray[i].radius);\n      if (newdiff < diff) {\n        diff = newdiff;\n        curr = loopArray[i].radius;\n        id = i;\n      }\n    }\n\n    if (diff < acceptableRange) {\n      return { index: id, value: curr };\n    } else {\n      return null;\n    }\n  }\n\n  findSnapCoordinates(x1, y1, cx, cy, distance) {\n    var angle = Math.atan2(y1, x1);\n    const x2 = cx - Math.cos(angle) * distance;\n    const y2 = cy + Math.sin(angle) * distance;\n    return { x: x2, y: y2 };\n  }\n\n  findClosestLoopPt(a, b, id){\n    console.log(this.props.loops[id])\n    \n    var min = {x: 50, y: 50};\n    // reference the loop and then its points\n    for (var i = 0; i < this.props.loops[id][pts].length; i++){\n      var pointX = this.props.loops[id][i].x;\n      var pointY = this.props.loops[id][i].y;\n      // if coordinates of currently indexed point are less than min\n      var dist = Math.sqrt((pointX-a*pointX-a)+(pointY-b*pointY-b));\n      if (dist < min){\n        min.x = pointX;\n        min.y = pointY\n      }\n    }\n    return min;\n  }\n\n  snap(x1, y1) {\n    const cx = window.innerWidth / 2;\n    const cy = window.innerHeight / 2;\n\n    var a = y1 - cy;\n    var b = x1 - cx;\n    //c\n    var distToCenter = Math.sqrt(a * a + b * b);\n    var loopToSnap = this.findClosestLoop(distToCenter);\n    if (loopToSnap) {\n      // for each point in loopToSnap, dispatch on coord of pts\n      // replace findSnapCoordinats with findClosestLoopPt\n      //var snapCoords = this.findSnapCoordinates(a, b, cx, cy, loopToSnap.value);\n      var snapCoords = this.findClosestLoopPt(a, b, loopToSnap.index)\n      var newA = (snapCoords.y - cy) * -1;\n      var newB = snapCoords.x - cx;\n\n      this.props.dispatch(\n        addTone(\n          cx,\n          cy,\n          this.props.color,\n          newA,\n          newB,\n\n          loopToSnap.index,\n          20,\n          this.props.sound\n        )\n      );\n    }\n  }\n\n  handleStop() {\n    this.rect = this.selector.current.getBoundingClientRect();\n    const x = this.rect.left;\n    const y = this.rect.top;\n\n    this.snap(x, y);\n\n    this.setState({\n      deltaPosition: {\n        x: 0,\n        y: 0\n      }\n    });\n  }\n\n  handleClick() {\n    this.props.dispatch(playTone(this.props.sound));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <button\n          className=\"hover-shadow\"\n          style={{\n            borderRadius: \"100%\",\n            border: \"2px solid\",\n            borderColor: this.props.color,\n            backgroundColor: \"transparent\",\n            width: \"2rem\",\n            height: \"2rem\",\n            position: \"absolute\",\n            outline: \"none\",\n            pointerEvents: \"none\"\n          }}\n        />\n        <Draggable position={this.state.deltaPosition} onStop={this.handleStop}>\n          <button\n            ref={this.selector}\n            className=\"hover-shadow\"\n            onClick={this.handleClick}\n            style={{\n              borderRadius: \"100%\",\n              backgroundColor: this.props.color,\n              width: \"2rem\",\n              zIndex: 1,\n              height: \"2rem\",\n              border: \"none\",\n              outline: \"none\"\n            }}\n          />\n        </Draggable>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  console.log(state); // state\n  return {\n    loops: state.loops\n  };\n}\n\nexport default connect(mapStateToProps)(ToneButton);\n"]},"metadata":{},"sourceType":"module"}