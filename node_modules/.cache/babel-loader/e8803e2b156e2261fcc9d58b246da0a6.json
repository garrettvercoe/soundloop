{"ast":null,"code":"import _objectSpread from \"/Users/garrett/repos/soundloop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_TONE, RECEIVE_TONES, RESIZE_TONE, DELETE_TONE } from \"../actions/tones\";\nimport { TRASH_ALL } from \"../actions/shared\";\nlet nextToneId = 0;\nexport default function tones(state = [], action) {\n  switch (action.type) {\n    case ADD_TONE:\n      return [...state, {\n        id: nextToneId++,\n        color: action.color,\n        // sound: \"idk\",\n        attachedLoop: action.attachedLoop,\n        radius: action.radius,\n        sound: action.sound,\n        position: action.position,\n        offset: action.offset\n      }];\n\n    case RESIZE_TONE:\n      return {\n        state\n      };\n\n    case DELETE_TONE:\n      console.log(\"action id\" + action);\n      console.log(\"LOGGING FILTER\" + [...state].filter(i => console.log(i.id !== action.id)));\n      let x = [...state.filter((i, index) => index !== action.id)];\n      return x;\n\n    case TRASH_ALL:\n      nextToneId = 0;\n      return [];\n\n    case RECEIVE_TONES:\n      return _objectSpread({}, state, action.tones);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/garrett/repos/soundloop/src/reducers/tones.js"],"names":["ADD_TONE","RECEIVE_TONES","RESIZE_TONE","DELETE_TONE","TRASH_ALL","nextToneId","tones","state","action","type","id","color","attachedLoop","radius","sound","position","offset","console","log","filter","i","x","index"],"mappings":";AAAA,SACEA,QADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,WAJF,QAKO,kBALP;AAMA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,IAAIC,UAAU,GAAG,CAAjB;AACA,eAAe,SAASC,KAAT,CAAeC,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,QAAL;AACE,aAAO,CACL,GAAGO,KADE,EAEL;AACEG,QAAAA,EAAE,EAAEL,UAAU,EADhB;AAEEM,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAFhB;AAGE;AACAC,QAAAA,YAAY,EAAEJ,MAAM,CAACI,YAJvB;AAKEC,QAAAA,MAAM,EAAEL,MAAM,CAACK,MALjB;AAMEC,QAAAA,KAAK,EAAEN,MAAM,CAACM,KANhB;AAOEC,QAAAA,QAAQ,EAAEP,MAAM,CAACO,QAPnB;AAQEC,QAAAA,MAAM,EAAER,MAAM,CAACQ;AARjB,OAFK,CAAP;;AAcF,SAAKd,WAAL;AACE,aAAO;AAAEK,QAAAA;AAAF,OAAP;;AAEF,SAAKJ,WAAL;AACEc,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcV,MAA1B;AACAS,MAAAA,OAAO,CAACC,GAAR,CACE,mBACE,CAAC,GAAGX,KAAJ,EAAWY,MAAX,CAAkBC,CAAC,IAAIH,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACV,EAAF,KAASF,MAAM,CAACE,EAA5B,CAAvB,CAFJ;AAIA,UAAIW,CAAC,GAAG,CAAC,GAAGd,KAAK,CAACY,MAAN,CAAa,CAACC,CAAD,EAAIE,KAAJ,KAAcA,KAAK,KAAKd,MAAM,CAACE,EAA5C,CAAJ,CAAR;AACA,aAAOW,CAAP;;AACF,SAAKjB,SAAL;AACEC,MAAAA,UAAU,GAAG,CAAb;AACA,aAAO,EAAP;;AAEF,SAAKJ,aAAL;AACE,+BACKM,KADL,EAEKC,MAAM,CAACF,KAFZ;;AAIF;AACE,aAAOC,KAAP;AArCJ;AAuCD","sourcesContent":["import {\n  ADD_TONE,\n  RECEIVE_TONES,\n  RESIZE_TONE,\n  DELETE_TONE\n} from \"../actions/tones\";\nimport { TRASH_ALL } from \"../actions/shared\";\n\nlet nextToneId = 0;\nexport default function tones(state = [], action) {\n  switch (action.type) {\n    case ADD_TONE:\n      return [\n        ...state,\n        {\n          id: nextToneId++,\n          color: action.color,\n          // sound: \"idk\",\n          attachedLoop: action.attachedLoop,\n          radius: action.radius,\n          sound: action.sound,\n          position: action.position,\n          offset: action.offset\n        }\n      ];\n\n    case RESIZE_TONE:\n      return { state };\n\n    case DELETE_TONE:\n      console.log(\"action id\" + action);\n      console.log(\n        \"LOGGING FILTER\" +\n          [...state].filter(i => console.log(i.id !== action.id))\n      );\n      let x = [...state.filter((i, index) => index !== action.id)];\n      return x;\n    case TRASH_ALL:\n      nextToneId = 0;\n      return [];\n\n    case RECEIVE_TONES:\n      return {\n        ...state,\n        ...action.tones\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}