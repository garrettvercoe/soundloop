{"ast":null,"code":"import { addLoop, activateLoop } from \"./loops\";\nimport ToggleMode from \"../components/ToggleMode\"; //OVERALL\n\nexport const TOGGLE_PLAY = \"TOGGLE_PLAY\";\nexport const TOGGLE_STOP = \"TOGGLE_STOP\";\nexport const TOGGLE_RESTART = \"TOGGLE_RESTART\";\nexport const UPDATE_LOOP_COUNT = \"UPDATE_LOOP_COUNT\";\nexport const TOGGLE_MUTE = \"TOGGLE_MUTE\";\nexport const TOGGLE_UNMUTE = \"TOGGLE_UNMUTE\";\nexport const TRASH_ALL_LINEAR = \"TRASH_ALL_LINEAR\";\nexport const TRASH_ALL_ANGULAR = \"TRASH_ALL_ANGULAR\";\nexport const IMPORT_FILE = \"IMPORT_FILE\";\nexport const RESET_LOOP_COUNT = \"RESET_LOOP_COUNT\";\nexport const SCREEN_RESIZE = \"SCREEN_RESIZE\";\nexport const UPDATE_FILENAME = \"UPDATE_FILENAME\";\nexport const UPDATE_VOLUME = \"UPDATE_VOLUME\";\nexport const TOGGLE_MODE = \"TOGGLE_MODE\";\nexport const UPDATE_TEMPO = \"UPDATE_TEMPO\";\nexport const UPDATE_SUSTAIN = \"UPDATE_SUSTAIN\";\nexport function togglePlay() {\n  return {\n    type: TOGGLE_PLAY,\n    playing: true\n  };\n}\nexport function updateFilename(name) {\n  return {\n    type: UPDATE_FILENAME,\n    fileName: name\n  };\n}\nexport function updateSustain(sus) {\n  return {\n    type: UPDATE_SUSTAIN,\n    selectedSustain: sus\n  };\n}\nexport function updateVolume(vol) {\n  return {\n    type: UPDATE_VOLUME,\n    volume: -((100 - vol) / 8)\n  };\n}\nexport function updateTempo(tempo) {\n  return {\n    type: UPDATE_TEMPO,\n    tempo: tempo\n  };\n}\nexport function toggleMode(toggled) {\n  return {\n    type: TOGGLE_MODE,\n    mode: toggled\n  };\n}\nexport function screenResize(width, height) {\n  return {\n    type: SCREEN_RESIZE,\n    screenWidth: width,\n    screenHeight: height\n  };\n}\nexport function toggleStop() {\n  return {\n    type: TOGGLE_STOP,\n    playing: false\n  };\n}\nlet loopCount = 1;\nexport function addLoopCount() {\n  return {\n    type: UPDATE_LOOP_COUNT,\n    loopCount: loopCount++\n  };\n}\nexport function subLoopCount() {\n  console.log(\"IN SUB\");\n  return {\n    type: UPDATE_LOOP_COUNT,\n    loopCount: loopCount -= loopCount\n  };\n}\nexport function resetLoopCount() {\n  loopCount = 1;\n  return {\n    type: UPDATE_LOOP_COUNT,\n    loopCount: loopCount\n  };\n}\nexport function toggleMute() {\n  return {\n    type: TOGGLE_MUTE,\n    muted: true\n  };\n}\nexport function toggleUnmute() {\n  return {\n    type: TOGGLE_UNMUTE,\n    muted: false\n  };\n}\nexport function trashAllLinear() {\n  console.log(\"TRASH ALL LIN\");\n  return dispatch => {\n    dispatch({\n      type: TRASH_ALL_LINEAR\n    });\n    dispatch(resetLoopCount());\n    dispatch(addLoop(window.innerHeight / 3));\n    dispatch(addLoop(window.innerHeight / 6));\n    dispatch(addLoop(window.innerHeight / 12));\n    dispatch(addLoop(window.innerHeight / 24));\n    dispatch(addLoop(window.innerHeight / 48));\n    dispatch(activateLoop(0));\n  };\n}\nexport function trashAllAngular() {\n  // var interval = this.props.centerY/7;\n  console.log(\"TRASH ALL ANG\");\n  var interval = window.innerHeight / 14;\n  return dispatch => {\n    dispatch({\n      type: TRASH_ALL_ANGULAR\n    });\n    dispatch(resetLoopCount());\n\n    for (var i = 0; i < 5; i++) {\n      dispatch(addLoop(window.innerHeight / 3 - interval * i));\n    }\n\n    dispatch(activateLoop(0));\n  };\n}\nexport function importFile(file) {\n  return {\n    type: IMPORT_FILE,\n    data: file\n  };\n}","map":{"version":3,"sources":["/Users/ericduong/Documents/repos/soundloop/src/actions/shared.js"],"names":["addLoop","activateLoop","ToggleMode","TOGGLE_PLAY","TOGGLE_STOP","TOGGLE_RESTART","UPDATE_LOOP_COUNT","TOGGLE_MUTE","TOGGLE_UNMUTE","TRASH_ALL_LINEAR","TRASH_ALL_ANGULAR","IMPORT_FILE","RESET_LOOP_COUNT","SCREEN_RESIZE","UPDATE_FILENAME","UPDATE_VOLUME","TOGGLE_MODE","UPDATE_TEMPO","UPDATE_SUSTAIN","togglePlay","type","playing","updateFilename","name","fileName","updateSustain","sus","selectedSustain","updateVolume","vol","volume","updateTempo","tempo","toggleMode","toggled","mode","screenResize","width","height","screenWidth","screenHeight","toggleStop","loopCount","addLoopCount","subLoopCount","console","log","resetLoopCount","toggleMute","muted","toggleUnmute","trashAllLinear","dispatch","window","innerHeight","trashAllAngular","interval","i","importFile","file","data"],"mappings":"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","sourcesContent":["import { addLoop, activateLoop } from \"./loops\";\nimport ToggleMode from \"../components/ToggleMode\";\n\n//OVERALL\nexport const TOGGLE_PLAY = \"TOGGLE_PLAY\";\nexport const TOGGLE_STOP = \"TOGGLE_STOP\";\nexport const TOGGLE_RESTART = \"TOGGLE_RESTART\";\nexport const UPDATE_LOOP_COUNT = \"UPDATE_LOOP_COUNT\";\nexport const TOGGLE_MUTE = \"TOGGLE_MUTE\";\nexport const TOGGLE_UNMUTE = \"TOGGLE_UNMUTE\";\nexport const TRASH_ALL_LINEAR = \"TRASH_ALL_LINEAR\";\nexport const TRASH_ALL_ANGULAR = \"TRASH_ALL_ANGULAR\";\nexport const IMPORT_FILE = \"IMPORT_FILE\";\nexport const RESET_LOOP_COUNT = \"RESET_LOOP_COUNT\";\nexport const SCREEN_RESIZE = \"SCREEN_RESIZE\";\nexport const UPDATE_FILENAME = \"UPDATE_FILENAME\";\nexport const UPDATE_VOLUME = \"UPDATE_VOLUME\";\nexport const TOGGLE_MODE = \"TOGGLE_MODE\";\nexport const UPDATE_TEMPO = \"UPDATE_TEMPO\";\nexport const UPDATE_SUSTAIN = \"UPDATE_SUSTAIN\";\n\nexport function togglePlay() {\n  return {\n    type: TOGGLE_PLAY,\n    playing: true\n  };\n}\n\nexport function updateFilename(name) {\n  return {\n    type: UPDATE_FILENAME,\n    fileName: name\n  };\n}\n\nexport function updateSustain(sus) {\n  return {\n    type: UPDATE_SUSTAIN,\n    selectedSustain: sus\n  };\n}\n\nexport function updateVolume(vol) {\n  return {\n    type: UPDATE_VOLUME,\n    volume: -((100 - vol) / 8)\n  };\n}\n\nexport function updateTempo(tempo) {\n  return {\n    type: UPDATE_TEMPO,\n    tempo: tempo\n  };\n}\n\nexport function toggleMode(toggled) {\n  return { type: TOGGLE_MODE, mode: toggled };\n}\n\nexport function screenResize(width, height) {\n  return {\n    type: SCREEN_RESIZE,\n    screenWidth: width,\n    screenHeight: height\n  };\n}\n\nexport function toggleStop() {\n  return {\n    type: TOGGLE_STOP,\n    playing: false\n  };\n}\n\nlet loopCount = 1;\nexport function addLoopCount() {\n  return {\n    type: UPDATE_LOOP_COUNT,\n    loopCount: loopCount++\n  };\n}\n\nexport function subLoopCount() {\n  console.log(\"IN SUB\")\n  return {\n    type: UPDATE_LOOP_COUNT,\n    loopCount: loopCount-=loopCount\n  };\n}\n\nexport function resetLoopCount() {\n  loopCount = 1;\n  return {\n    type: UPDATE_LOOP_COUNT,\n    loopCount: loopCount\n  };\n}\n\nexport function toggleMute() {\n  return {\n    type: TOGGLE_MUTE,\n    muted: true\n  };\n}\n\nexport function toggleUnmute() {\n  return {\n    type: TOGGLE_UNMUTE,\n    muted: false\n  };\n}\n\nexport function trashAllLinear() {\n  console.log(\"TRASH ALL LIN\");\n  return dispatch => {\n    dispatch({ type: TRASH_ALL_LINEAR });\n    dispatch(resetLoopCount());\n    dispatch(addLoop(window.innerHeight / 3));\n    dispatch(addLoop(window.innerHeight / 6));\n    dispatch(addLoop(window.innerHeight / 12));\n    dispatch(addLoop(window.innerHeight / 24));\n    dispatch(addLoop(window.innerHeight / 48));\n    dispatch(activateLoop(0));\n  };\n}\n\nexport function trashAllAngular() {\n  // var interval = this.props.centerY/7;\n  console.log(\"TRASH ALL ANG\");\n  var interval = window.innerHeight / 14;\n  return dispatch => {\n    dispatch({ type: TRASH_ALL_ANGULAR });\n    dispatch(resetLoopCount());\n    for (var i = 0; i < 5; i++){\n      dispatch(addLoop((window.innerHeight / 3) - (interval*i)))\n    }\n    dispatch(activateLoop(0));\n  };\n}\n\nexport function importFile(file) {\n  return {\n    type: IMPORT_FILE,\n    data: file\n  };\n}\n"]},"metadata":{},"sourceType":"module"}