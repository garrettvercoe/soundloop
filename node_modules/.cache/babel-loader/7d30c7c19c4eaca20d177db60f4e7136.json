{"ast":null,"code":"var _jsxFileName = \"/Users/garrett/repos/soundloop/src/components/ToneButton.js\";\nimport React from \"react\";\nimport \"../styles/index.css\";\nimport { connect } from \"react-redux\";\nimport { updateTone } from \"../actions/tones\";\nimport { playTone } from \"../actions/cord\";\nimport { cursorAdd } from \"../actions/cursor\";\n\nclass ToneButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this); // this.handleDrag = this.handleDrag.bind(this);\n  }\n\n  handleStop() {}\n\n  handleClick() {\n    this.props.dispatch(cursorAdd(this.props.note, this.props.color));\n    var radius = this.props.screenHeight / 350;\n\n    for (var i = 0; i < this.props.tones.length; i++) {\n      if (this.props.tones[i].sound === null && !this.props.playing && this.props.loops[this.props.tones[i].attachedLoop].active === true) {\n        this.props.dispatch(updateTone(i, \"#692D55\", null, radius));\n      }\n    }\n\n    if (!this.props.playing) {\n      this.props.dispatch(playTone(this.props.sound, this.props.selectedSustain));\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"outer-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.selector,\n      className: \"hover-shadow\",\n      onClick: this.handleClick,\n      style: {\n        borderRadius: \"100%\",\n        backgroundColor: this.props.color,\n        width: \"2rem\",\n        zIndex: 1,\n        height: \"2rem\",\n        boxShadow: this.props.sound === this.props.note ? \" 0 10px 10px rgba(0, 0, 0, 0.08), 0 3px 3px rgba(0, 0, 0, 0.17)\" : \"none\",\n        border: \"none\",\n        outline: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"note-select\",\n      style: {\n        color: this.props.textColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.props.note))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loops: state.loops,\n    selectedNote: state.cursor.sound,\n    tones: state.tones,\n    playing: state.shared.playing,\n    center: state.shared.center,\n    screenHeight: state.shared.screenHeight,\n    selectedSustain: state.shared.selectedSustain,\n    toneSizes: state.shared.toneSizes\n  };\n} //\n\n\nexport default connect(mapStateToProps)(ToneButton);","map":{"version":3,"sources":["/Users/garrett/repos/soundloop/src/components/ToneButton.js"],"names":["React","connect","updateTone","playTone","cursorAdd","ToneButton","Component","constructor","props","handleClick","bind","handleStop","dispatch","note","color","radius","screenHeight","i","tones","length","sound","playing","loops","attachedLoop","active","selectedSustain","render","selector","borderRadius","backgroundColor","width","zIndex","height","boxShadow","border","outline","textColor","mapStateToProps","state","selectedNote","cursor","shared","center","toneSizes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../styles/index.css\";\n\nimport { connect } from \"react-redux\";\nimport { updateTone } from \"../actions/tones\";\nimport { playTone } from \"../actions/cord\";\nimport { cursorAdd } from \"../actions/cursor\";\nclass ToneButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    // this.handleDrag = this.handleDrag.bind(this);\n  }\n\n  handleStop() {}\n\n  handleClick() {\n    this.props.dispatch(cursorAdd(this.props.note, this.props.color));\n\n    var radius = this.props.screenHeight / 350;\n    for (var i = 0; i < this.props.tones.length; i++) {\n      if (\n        this.props.tones[i].sound === null &&\n        !this.props.playing &&\n        this.props.loops[this.props.tones[i].attachedLoop].active === true\n      ) {\n        this.props.dispatch(updateTone(i, \"#692D55\", null, radius));\n      }\n    }\n\n    if (!this.props.playing) {\n      this.props.dispatch(\n        playTone(this.props.sound, this.props.selectedSustain)\n      );\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {/* <Draggable\n          position={this.state.deltaPosition}\n          onStop={this.handleStop}\n          onStart={this.handleDrag}\n        > */}\n        <div className=\"outer-button\">\n          <div\n            ref={this.selector}\n            className=\"hover-shadow\"\n            onClick={this.handleClick}\n            style={{\n              borderRadius: \"100%\",\n              backgroundColor: this.props.color,\n              width: \"2rem\",\n              zIndex: 1,\n              height: \"2rem\",\n              boxShadow:\n                this.props.sound === this.props.note\n                  ? \" 0 10px 10px rgba(0, 0, 0, 0.08), 0 3px 3px rgba(0, 0, 0, 0.17)\"\n                  : \"none\",\n              border: \"none\",\n              outline: \"none\"\n            }}\n          >\n            <div\n              className=\"note-select\"\n              style={{ color: this.props.textColor }}\n            >\n              {this.props.note}\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loops: state.loops,\n    selectedNote: state.cursor.sound,\n    tones: state.tones,\n    playing: state.shared.playing,\n    center: state.shared.center,\n    screenHeight: state.shared.screenHeight,\n    selectedSustain: state.shared.selectedSustain,\n    toneSizes: state.shared.toneSizes\n  };\n}\n\n//\n\nexport default connect(mapStateToProps)(ToneButton);\n"]},"metadata":{},"sourceType":"module"}