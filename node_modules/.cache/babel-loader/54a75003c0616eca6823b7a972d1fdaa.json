{"ast":null,"code":"var _jsxFileName = \"/Users/ericduong/Documents/repos/soundloop/src/components/Cord.js\";\nimport React from \"react\";\nimport \"../styles/index.css\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport PlayButton from \"./PlayButton\";\nimport { Line, Layer, Circle } from \"react-konva\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { connect } from \"react-redux\";\nimport Konva from \"konva\";\nimport Tone from \"tone\";\n\nclass Cord extends React.Component {\n  componentDidMount() {\n    //playing around with creating a sound\n    //create a synth and connect it to the master output (your speakers)\n    // var distortion = new Tone.Distortion(3.5);\n    // var tremolo = new Tone.Tremolo().start();\n    // this.synth = new Tone.Synth().chain(distortion, tremolo, Tone.Master);\n    this.synth = new Tone.Synth().toMaster();\n    var max = window.innerHeight / 2 - 50;\n    var interval = max / 8;\n    var pts = [];\n    var prevX = this.props.center.x;\n    var flux = 8;\n    var prevY = this.props.center.y;\n\n    for (var i = 0; i < 9; i++) {\n      pts.push(prevX);\n      pts.push(prevY);\n      prevX = prevX + flux;\n      prevY = prevY - interval;\n      flux = -flux;\n    }\n\n    this.tween = new Konva.Tween({\n      node: this.line,\n      points: pts,\n      // points: [\n      //   this.props.center.x,\n      //   this.props.center.y,\n      //   this.props.center.x + 5,\n      //   this.props.center.y - 50,\n      //   this.props.center.x - 5,\n      //   this.props.center.y - 100,\n      //   this.props.center.x + 5,\n      //   this.props.center.y - 150,\n      //   this.props.center.x - 5,\n      //   this.props.center.y - 200,\n      //   this.props.center.x + 5,\n      //   this.props.center.y - 250,\n      //   this.props.center.x - 5,\n      //   this.props.center.y - 300,\n      //   this.props.center.x + 5,\n      //   this.props.center.y - 350,\n      //   this.props.center.x,\n      //   this.props.center.y - 400\n      // ],\n      onFinish: function () {} //this.tween.reverse();\n      //   onReset: function() {\n      //     this.tween.play();\n      //   }\n\n    });\n\n    if (this.props.playing) {\n      this.tween.play();\n    }\n  }\n\n  playTween() {}\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.sounds !== this.props.sounds) {\n      this.synth.triggerAttackRelease(this.props.sounds[this.props.index], \"4n\");\n      this.tween.play();\n    }\n  }\n\n  render() {\n    var max = window.innerHeight / 2 - 50;\n    var interval = max / 8;\n    var pts = [];\n    var prevX = this.props.center.x;\n    var prevY = this.props.center.y;\n\n    for (var i = 0; i < 9; i++) {\n      pts.push(prevX);\n      pts.push(prevY);\n      prevY = prevY - interval;\n    }\n\n    console.log(pts);\n    return React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Circle, {\n      x: this.props.center.x,\n      y: this.props.center.y - max,\n      radius: 4,\n      fill: \"#692D55\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Circle, {\n      x: this.props.center.x,\n      y: this.props.center.y,\n      radius: 15,\n      fill: \"#692D55\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Line, {\n      points: pts,\n      stroke: \"#692D55\",\n      strokeWidth: 2,\n      tension: 0.5,\n      ref: node => {\n        this.line = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    center: state.shared.center,\n    playing: state.shared.playing,\n    sounds: state.cord.sounds,\n    index: state.cord.index\n  };\n}\n\nexport default connect(mapStateToProps)(Cord);","map":{"version":3,"sources":["/Users/ericduong/Documents/repos/soundloop/src/components/Cord.js"],"names":["React","AppBar","PlayButton","Line","Layer","Circle","Toolbar","connect","Konva","Tone","Cord","Component","componentDidMount","synth","Synth","toMaster","max","window","innerHeight","interval","pts","prevX","props","center","x","flux","prevY","y","i","push","tween","Tween","node","line","points","onFinish","playing","play","playTween","componentDidUpdate","prevProps","sounds","triggerAttackRelease","index","render","console","log","mapStateToProps","state","shared","cord"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../styles/index.css\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport PlayButton from \"./PlayButton\";\nimport { Line, Layer, Circle } from \"react-konva\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { connect } from \"react-redux\";\nimport Konva from \"konva\";\nimport Tone from \"tone\";\n\nclass Cord extends React.Component {\n  componentDidMount() {\n    //playing around with creating a sound\n\n    //create a synth and connect it to the master output (your speakers)\n    // var distortion = new Tone.Distortion(3.5);\n    // var tremolo = new Tone.Tremolo().start();\n    // this.synth = new Tone.Synth().chain(distortion, tremolo, Tone.Master);\n\n    this.synth = new Tone.Synth().toMaster();\n    var max = window.innerHeight/2-50;\n    var interval = max/8;\n    var pts = [];\n    var prevX = this.props.center.x;\n    var flux = 8;\n    var prevY = this.props.center.y;\n    for (var i=0; i<9; i++){\n      pts.push(prevX);\n      pts.push(prevY);\n      prevX = prevX + flux;\n      prevY = prevY - interval;\n      flux = -flux;\n    }\n    this.tween = new Konva.Tween({\n      node: this.line,\n      points: pts,\n      // points: [\n      //   this.props.center.x,\n      //   this.props.center.y,\n      //   this.props.center.x + 5,\n      //   this.props.center.y - 50,\n      //   this.props.center.x - 5,\n      //   this.props.center.y - 100,\n      //   this.props.center.x + 5,\n      //   this.props.center.y - 150,\n      //   this.props.center.x - 5,\n      //   this.props.center.y - 200,\n      //   this.props.center.x + 5,\n      //   this.props.center.y - 250,\n      //   this.props.center.x - 5,\n      //   this.props.center.y - 300,\n      //   this.props.center.x + 5,\n      //   this.props.center.y - 350,\n      //   this.props.center.x,\n      //   this.props.center.y - 400\n      // ],\n      onFinish: function() {\n        //this.tween.reverse();\n      }\n      //   onReset: function() {\n      //     this.tween.play();\n      //   }\n    });\n\n    if (this.props.playing) {\n      this.tween.play();\n    }\n  }\n\n  playTween() {}\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.sounds !== this.props.sounds) {\n      this.synth.triggerAttackRelease(\n        this.props.sounds[this.props.index],\n        \"4n\"\n      );\n      this.tween.play();\n    }\n  }\n\n  render() {\n    var max = window.innerHeight/2-50;\n    var interval = max/8;\n    var pts = [];\n    var prevX = this.props.center.x;\n    var prevY = this.props.center.y;\n    for (var i=0; i<9; i++){\n      pts.push(prevX);\n      pts.push(prevY);\n      prevY = prevY - interval;\n    }\n    console.log(pts)\n    return (\n      <Layer>\n        <Circle\n          x={this.props.center.x}\n          y={this.props.center.y - max}\n          radius={4}\n          fill=\"#692D55\"\n        />\n        <Circle\n          x={this.props.center.x}\n          y={this.props.center.y}\n          radius={15}\n          fill=\"#692D55\"\n        />\n        <Line\n          points={pts}\n          stroke=\"#692D55\"\n          strokeWidth={2}\n          tension={0.5}\n          ref={node => {\n            this.line = node;\n          }}\n        />\n      </Layer>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    center: state.shared.center,\n    playing: state.shared.playing,\n    sounds: state.cord.sounds,\n    index: state.cord.index\n  };\n}\n\nexport default connect(mapStateToProps)(Cord);\n"]},"metadata":{},"sourceType":"module"}