{"ast":null,"code":"var _jsxFileName = \"/Users/ericduong/Documents/repos/soundloop/src/components/MountedTones.js\";\nimport React from \"react\";\nimport \"../styles/index.css\";\nimport { Layer, Group } from \"react-konva\";\nimport { connect } from \"react-redux\";\nimport ToneKonva from \"./ToneKonva\";\n\nclass MountedTones extends React.Component {\n  // componentDidMount(){\n  //   console.log(\"CHILD: \" + JSON.stringify(this.layer.children))\n  //   console.log(\"GROUP: \" + this.gruppe)\n  //   this.gruppe.rotate(3)\n  //   console.log(\"TONES: \" + this.props.tones)\n  //   console.log(\"FILTER: \" + this.props.tones.filter(item => item.attachedLoop === 0))\n  //   console.log(\"FILTER: \" + this.props.tones.filter(function(item){return item.attachedLoop==0}))\n  //   // console.log(\"CHILD1: \" + this.child1)\n  // }\n  componentDidUpdate(prevProps) {\n    if (prevProps.tones !== this.props.tones) {\n      console.log(\"TONES update: \" + this.props.tones);\n    }\n  }\n\n  render() {\n    // if (this.props.tones.length === 112){\n    console.log(\"TONES updateddd: \" + this.props.tones);\n    console.log(\"FILTER: \" + this.props.tones.filter(item => item.attachedLoop === 0));\n    const loop0 = this.props.tones.filter(item => item.attachedLoop === 0);\n    const loop1 = this.props.tones.filter(item => item.attachedLoop === 1); // console.log(loop0)\n\n    return React.createElement(Layer, {\n      ref: node => {\n        this.layer = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Group, {\n      ref: node => {\n        this.gruppe = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, loop0.map(item => {\n      return React.createElement(ToneKonva, {\n        color: item.color,\n        x: this.props.center.x,\n        y: this.props.center.y,\n        offset: item.offset,\n        radius: item.radius,\n        attachedLoop: item.attachedLoop,\n        sound: item.sound,\n        duration: item.duration,\n        strokeWidth: item.strokeWidth,\n        id: item.id,\n        rotation: item.rotation,\n        ref: node => {\n          this.child = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    }))); // } else {\n    //   return null\n    // }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tones: state.tones,\n    loops: state.loops,\n    center: state.shared.center\n  };\n}\n\nexport default connect(mapStateToProps)(MountedTones);","map":{"version":3,"sources":["/Users/ericduong/Documents/repos/soundloop/src/components/MountedTones.js"],"names":["React","Layer","Group","connect","ToneKonva","MountedTones","Component","componentDidUpdate","prevProps","tones","props","console","log","render","filter","item","attachedLoop","loop0","loop1","node","layer","gruppe","map","color","center","x","y","offset","radius","sound","duration","strokeWidth","id","rotation","child","mapStateToProps","state","loops","shared"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../styles/index.css\";\nimport { Layer, Group } from \"react-konva\";\n\nimport { connect } from \"react-redux\";\nimport ToneKonva from \"./ToneKonva\";\n\nclass MountedTones extends React.Component {\n  // componentDidMount(){\n  //   console.log(\"CHILD: \" + JSON.stringify(this.layer.children))\n  //   console.log(\"GROUP: \" + this.gruppe)\n  //   this.gruppe.rotate(3)\n  //   console.log(\"TONES: \" + this.props.tones)\n\n  //   console.log(\"FILTER: \" + this.props.tones.filter(item => item.attachedLoop === 0))\n  //   console.log(\"FILTER: \" + this.props.tones.filter(function(item){return item.attachedLoop==0}))\n  //   // console.log(\"CHILD1: \" + this.child1)\n  // }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.tones !== this.props.tones){\n      console.log(\"TONES update: \" + this.props.tones)\n    }\n  }\n\n  render() {\n    \n    // if (this.props.tones.length === 112){\n    console.log(\"TONES updateddd: \" + this.props.tones)\n    console.log(\"FILTER: \" + this.props.tones.filter(item => item.attachedLoop === 0))\n    const loop0 = this.props.tones.filter(item => item.attachedLoop === 0)\n    const loop1 = this.props.tones.filter(item => item.attachedLoop === 1)\n    // console.log(loop0)\n    return (\n      <Layer ref={node => { this.layer = node; }}>\n        <Group ref={node => { this.gruppe = node; }}>\n        {/* {this.props.tones.map(item => {\n          return (\n            <ToneKonva\n              color={item.color}\n              x={this.props.center.x}\n              y={this.props.center.y}\n              offset={item.offset}\n              radius={item.radius}\n              attachedLoop={item.attachedLoop}\n              sound={item.sound}\n              duration={item.duration}\n              strokeWidth={item.strokeWidth}\n              id={item.id}\n              rotation={item.rotation}\n              ref={node => { this.child = node; }}\n            />\n          );\n        })} */}\n        {loop0.map(item => {\n          return (\n            <ToneKonva\n              color={item.color}\n              x={this.props.center.x}\n              y={this.props.center.y}\n              offset={item.offset}\n              radius={item.radius}\n              attachedLoop={item.attachedLoop}\n              sound={item.sound}\n              duration={item.duration}\n              strokeWidth={item.strokeWidth}\n              id={item.id}\n              rotation={item.rotation}\n              ref={node => { this.child = node; }}\n            />\n          );\n        })}\n        </Group>\n      </Layer>\n    );\n      // } else {\n      //   return null\n      // }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tones: state.tones,\n    loops: state.loops,\n    center: state.shared.center\n  };\n}\n\nexport default connect(mapStateToProps)(MountedTones);\n"]},"metadata":{},"sourceType":"module"}