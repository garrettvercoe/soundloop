{"ast":null,"code":"var _jsxFileName = \"/Users/ericduong/Documents/repos/soundloop/src/components/MountedLoops.js\";\nimport React from \"react\";\nimport \"../styles/index.css\";\nimport { Layer } from \"react-konva\";\nimport { connect } from \"react-redux\";\nimport LoopKonva from \"./LoopKonva\";\nimport { addLoop, activateLoop } from \"../actions/loops\";\n\nclass MountedLoops extends React.Component {\n  componentDidMount() {\n    // if mode true then dispatch this way\n    this.props.dispatch(addLoop(window.innerWidth));\n\n    if (this.props.mode === \"angular\") {\n      var interval = this.props.centerY / 7.5;\n\n      for (var i = 0; i < 5; i++) {\n        this.props.dispatch(addLoop(window.innerHeight / 3 - interval * i));\n      }\n    } else {\n      this.props.dispatch(addLoop(window.innerHeight / 3));\n      this.props.dispatch(addLoop(window.innerHeight / 6));\n      this.props.dispatch(addLoop(window.innerHeight / 12));\n      this.props.dispatch(addLoop(window.innerHeight / 24));\n      this.props.dispatch(addLoop(window.innerHeight / 48));\n    }\n\n    this.props.dispatch(activateLoop(0));\n  }\n\n  render() {\n    return React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.loops.map(function (item) {\n      return React.createElement(LoopKonva, {\n        radius: item.radius,\n        id: item.id,\n        stroke: item.stroke,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loops: state.loops,\n    centerY: state.shared.center.y,\n    mode: state.shared.mode,\n    center: state.shared.center,\n    height: state.shared.screenHeight\n  };\n}\n\nexport default connect(mapStateToProps)(MountedLoops);","map":{"version":3,"sources":["/Users/ericduong/Documents/repos/soundloop/src/components/MountedLoops.js"],"names":["React","Layer","connect","LoopKonva","addLoop","activateLoop","MountedLoops","Component","componentDidMount","props","dispatch","window","innerWidth","mode","interval","centerY","i","innerHeight","render","loops","map","item","radius","id","stroke","mapStateToProps","state","shared","center","y","height","screenHeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,SAASC,KAAT,QAAsB,aAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,kBAAtC;;AAEA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AACzCC,EAAAA,iBAAiB,GAAG;AAElB;AACA,SAAKC,KAAL,CAAWC,QAAX,CAAoBN,OAAO,CAACO,MAAM,CAACC,UAAR,CAA3B;;AACA,QAAI,KAAKH,KAAL,CAAWI,IAAX,KAAkB,SAAtB,EAAgC;AAC9B,UAAIC,QAAQ,GAAG,KAAKL,KAAL,CAAWM,OAAX,GAAmB,GAAlC;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA2B;AACzB,aAAKP,KAAL,CAAWC,QAAX,CAAoBN,OAAO,CAAEO,MAAM,CAACM,WAAP,GAAqB,CAAtB,GAA4BH,QAAQ,GAAGE,CAAxC,CAA3B;AACD;AACF,KAND,MAMO;AACL,WAAKP,KAAL,CAAWC,QAAX,CAAoBN,OAAO,CAACO,MAAM,CAACM,WAAP,GAAqB,CAAtB,CAA3B;AACA,WAAKR,KAAL,CAAWC,QAAX,CAAoBN,OAAO,CAACO,MAAM,CAACM,WAAP,GAAqB,CAAtB,CAA3B;AACA,WAAKR,KAAL,CAAWC,QAAX,CAAoBN,OAAO,CAACO,MAAM,CAACM,WAAP,GAAqB,EAAtB,CAA3B;AACA,WAAKR,KAAL,CAAWC,QAAX,CAAoBN,OAAO,CAACO,MAAM,CAACM,WAAP,GAAqB,EAAtB,CAA3B;AACA,WAAKR,KAAL,CAAWC,QAAX,CAAoBN,OAAO,CAACO,MAAM,CAACM,WAAP,GAAqB,EAAtB,CAA3B;AACD;;AACD,SAAKR,KAAL,CAAWC,QAAX,CAAoBL,YAAY,CAAC,CAAD,CAAhC;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWU,KAAX,CAAiBC,GAAjB,CAAqB,UAASC,IAAT,EAAe;AACnC,aACE,oBAAC,SAAD;AAAW,QAAA,MAAM,EAAEA,IAAI,CAACC,MAAxB;AAAgC,QAAA,EAAE,EAAED,IAAI,CAACE,EAAzC;AAA6C,QAAA,MAAM,EAAEF,IAAI,CAACG,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJA,CADH,CADF;AASD;;AA/BwC;;AAkC3C,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLP,IAAAA,KAAK,EAAEO,KAAK,CAACP,KADR;AAELJ,IAAAA,OAAO,EAAEW,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBC,CAFxB;AAGLhB,IAAAA,IAAI,EAAEa,KAAK,CAACC,MAAN,CAAad,IAHd;AAILe,IAAAA,MAAM,EAAEF,KAAK,CAACC,MAAN,CAAaC,MAJhB;AAKLE,IAAAA,MAAM,EAAEJ,KAAK,CAACC,MAAN,CAAaI;AALhB,GAAP;AAOD;;AAED,eAAe7B,OAAO,CAACuB,eAAD,CAAP,CAAyBnB,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport \"../styles/index.css\";\nimport { Layer } from \"react-konva\";\n\nimport { connect } from \"react-redux\";\nimport LoopKonva from \"./LoopKonva\";\nimport { addLoop, activateLoop } from \"../actions/loops\";\n\nclass MountedLoops extends React.Component {\n  componentDidMount() {\n\n    // if mode true then dispatch this way\n    this.props.dispatch(addLoop(window.innerWidth))\n    if (this.props.mode===\"angular\"){\n      var interval = this.props.centerY/7.5\n      \n      for (var i = 0; i < 5; i++){\n        this.props.dispatch(addLoop((window.innerHeight / 3) - (interval * i)))\n      }\n    } else {\n      this.props.dispatch(addLoop(window.innerHeight / 3));\n      this.props.dispatch(addLoop(window.innerHeight / 6));\n      this.props.dispatch(addLoop(window.innerHeight / 12));\n      this.props.dispatch(addLoop(window.innerHeight / 24));\n      this.props.dispatch(addLoop(window.innerHeight / 48));\n    }\n    this.props.dispatch(activateLoop(0));\n  }\n\n  render() {\n    return (\n      <Layer>\n        {this.props.loops.map(function(item) {\n          return (\n            <LoopKonva radius={item.radius} id={item.id} stroke={item.stroke} />\n          );\n        })}\n      </Layer>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loops: state.loops,\n    centerY: state.shared.center.y,\n    mode: state.shared.mode,\n    center: state.shared.center,\n    height: state.shared.screenHeight\n  };\n}\n\nexport default connect(mapStateToProps)(MountedLoops);\n"]},"metadata":{},"sourceType":"module"}