{"ast":null,"code":"var _jsxFileName = \"/Users/ericduong/Documents/repos/soundloop/src/components/LoopKonva.js\";\nimport React from \"react\";\nimport { Circle } from \"react-konva\";\nimport { connect } from \"react-redux\";\nimport { addInterval } from \"../actions/intervals\";\nimport { addTone } from \"../actions/tones\";\n\nclass LoopKonva extends React.Component {\n  findAngleCoord(cx, cy, angle, distance) {\n    const x2 = cx - Math.cos(angle) * distance;\n    const y2 = cy + Math.sin(angle) * distance;\n    return {\n      x: x2,\n      y: y2\n    };\n  }\n\n  componentDidMount() {\n    var cx = window.innerWidth / 2;\n    var cy = window.innerHeight / 2; // var numTones = this.Circle.r\n    // for (var i = 0; i < 4; i ++){\n    //   this.props.dispatch(addInterval(window.innerWidth/2, window.innerHeight/2, 10, 10, 1, 10))\n    // }\n    // this.props.dispatch(addInterval(window.innerWidth/2, window.innerHeight/2, this.props.radius, 0, 1, 10));\n    // this.props.dispatch(addInterval(window.innerWidth/2, window.innerHeight/2, 0, this.props.radius, 1, 10));\n    // this.props.dispatch(addInterval(window.innerWidth/2, window.innerHeight/2, -this.props.radius, 0, 1, 10));\n    // this.props.dispatch(addInterval(window.innerWidth/2, window.innerHeight/2, 0, -this.props.radius, 1, 10));\n\n    var angle = 0; // for \n    // this.props.dispatch(addTone(cx, cy, \"#fcf6ec\", \"#ed1e79\", 10, -this.props.radius, 0, 0, 20, null));\n    // this.props.dispatch(addTone(cx, cy, \"#fcf6ec\", \"#ed1e79\", 10, this.props.radius, 0, 0, 20, null));\n    // this.props.dispatch(addTone(cx, cy, \"#fcf6ec\", \"#ed1e79\", 10, 0, -this.props.radius, 0, 20, null));\n    // this.props.dispatch(addTone(cx, cy, \"#fcf6ec\", \"#ed1e79\", 10, 0, this.props.radius, 0, 20, null));\n  }\n\n  render() {\n    return React.createElement(Circle, {\n      x: window.innerWidth / 2,\n      y: window.innerHeight / 2,\n      radius: this.props.radius,\n      fill: \"transparent\",\n      stroke: \"#ed1e79\",\n      strokeWidth: 1.5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default connect()(LoopKonva);","map":{"version":3,"sources":["/Users/ericduong/Documents/repos/soundloop/src/components/LoopKonva.js"],"names":["React","Circle","connect","addInterval","addTone","LoopKonva","Component","findAngleCoord","cx","cy","angle","distance","x2","Math","cos","y2","sin","x","y","componentDidMount","window","innerWidth","innerHeight","render","props","radius"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACtCC,EAAAA,cAAc,CAACC,EAAD,EAAKC,EAAL,EAASC,KAAT,EAAgBC,QAAhB,EAAyB;AACrC,UAAMC,EAAE,GAAGJ,EAAE,GAAGK,IAAI,CAACC,GAAL,CAASJ,KAAT,IAAkBC,QAAlC;AACA,UAAMI,EAAE,GAAGN,EAAE,GAAGI,IAAI,CAACG,GAAL,CAASN,KAAT,IAAkBC,QAAlC;AACA,WAAO;AAAEM,MAAAA,CAAC,EAAEL,EAAL;AAASM,MAAAA,CAAC,EAAEH;AAAZ,KAAP;AACD;;AAEDI,EAAAA,iBAAiB,GAAE;AACjB,QAAIX,EAAE,GAAGY,MAAM,CAACC,UAAP,GAAkB,CAA3B;AACA,QAAIZ,EAAE,GAAGW,MAAM,CAACE,WAAP,GAAmB,CAA5B,CAFiB,CAGjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAIZ,KAAK,GAAG,CAAZ,CAXiB,CAYjB;AAEA;AACA;AACA;AACA;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AACE,MAAA,CAAC,EAAEH,MAAM,CAACC,UAAP,GAAoB,CADzB;AAEE,MAAA,CAAC,EAAED,MAAM,CAACE,WAAP,GAAqB,CAF1B;AAGE,MAAA,MAAM,EAAE,KAAKE,KAAL,CAAWC,MAHrB;AAIE,MAAA,IAAI,EAAE,aAJR;AAKE,MAAA,MAAM,EAAE,SALV;AAME,MAAA,WAAW,EAAE,GANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD;;AAvCqC;;AA0CxC,eAAevB,OAAO,GAAGG,SAAH,CAAtB","sourcesContent":["import React from \"react\";\nimport { Circle } from \"react-konva\";\nimport { connect } from \"react-redux\";\nimport { addInterval } from \"../actions/intervals\";\nimport { addTone } from \"../actions/tones\";\n\nclass LoopKonva extends React.Component {\n  findAngleCoord(cx, cy, angle, distance){\n    const x2 = cx - Math.cos(angle) * distance;\n    const y2 = cy + Math.sin(angle) * distance;\n    return { x: x2, y: y2 };\n  }\n\n  componentDidMount(){\n    var cx = window.innerWidth/2;\n    var cy = window.innerHeight/2;\n    // var numTones = this.Circle.r\n    // for (var i = 0; i < 4; i ++){\n    //   this.props.dispatch(addInterval(window.innerWidth/2, window.innerHeight/2, 10, 10, 1, 10))\n    // }\n    // this.props.dispatch(addInterval(window.innerWidth/2, window.innerHeight/2, this.props.radius, 0, 1, 10));\n    // this.props.dispatch(addInterval(window.innerWidth/2, window.innerHeight/2, 0, this.props.radius, 1, 10));\n    // this.props.dispatch(addInterval(window.innerWidth/2, window.innerHeight/2, -this.props.radius, 0, 1, 10));\n    // this.props.dispatch(addInterval(window.innerWidth/2, window.innerHeight/2, 0, -this.props.radius, 1, 10));\n    var angle = 0;\n    // for \n\n    // this.props.dispatch(addTone(cx, cy, \"#fcf6ec\", \"#ed1e79\", 10, -this.props.radius, 0, 0, 20, null));\n    // this.props.dispatch(addTone(cx, cy, \"#fcf6ec\", \"#ed1e79\", 10, this.props.radius, 0, 0, 20, null));\n    // this.props.dispatch(addTone(cx, cy, \"#fcf6ec\", \"#ed1e79\", 10, 0, -this.props.radius, 0, 20, null));\n    // this.props.dispatch(addTone(cx, cy, \"#fcf6ec\", \"#ed1e79\", 10, 0, this.props.radius, 0, 20, null));\n  }\n\n  render() {\n    return (\n      <Circle\n        x={window.innerWidth / 2}\n        y={window.innerHeight / 2}\n        radius={this.props.radius}\n        fill={\"transparent\"}\n        stroke={\"#ed1e79\"}\n        strokeWidth={1.5}\n      />\n      \n    );\n  }\n}\n\nexport default connect()(LoopKonva);\n"]},"metadata":{},"sourceType":"module"}