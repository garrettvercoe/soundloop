{"ast":null,"code":"var _jsxFileName = \"/Users/garrett/repos/soundloop/src/components/BugReporter.js\";\nimport React from \"react\";\nimport \"../styles/index.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport { Form, Input } from \"semantic-ui-react\";\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: \"4rem\"\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const children = props.children,\n        classes = props.classes,\n        onClose = props.onClose;\n  return React.createElement(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, children), onClose ? React.createElement(IconButton, {\n    \"aria-label\": \"Close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: \"4rem\"\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: \"4rem\"\n  }\n}))(MuiDialogActions);\nexport default class NewToneMenu extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"plus-icon inl-blk fa-lg\",\n      icon: faPlusCircle,\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Dialog, {\n      fullWidth: true,\n      maxWidth: \"md\",\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: this.state.open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"customized-dialog-title\",\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Add a New Tone\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Form, {\n      id: \"contactform\",\n      action: \"https://formspree.io/garrettvercoe@gmail.com\",\n      method: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      label: \"First name\",\n      name: \"first\",\n      placeholder: \"First name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Last name\",\n      name: \"last\",\n      placeholder: \"Last name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Email\",\n      name: \"_replyto\",\n      placeholder: \"johndoe@gmail.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(Input, {\n      type: \"hidden\",\n      name: \"_subject\",\n      value: \"Contact form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Form.TextArea, {\n      label: \"Message\",\n      name: \"message\",\n      placeholder: \"Hey Garrett...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Form.Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Add Tones\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/garrett/repos/soundloop/src/components/BugReporter.js"],"names":["React","FontAwesomeIcon","faPlusCircle","Dialog","IconButton","CloseIcon","Button","withStyles","MuiDialogTitle","MuiDialogContent","MuiDialogActions","Form","Input","styles","theme","root","margin","padding","closeButton","position","right","spacing","top","color","palette","grey","DialogTitle","props","children","classes","onClose","DialogContent","DialogActions","NewToneMenu","Component","state","open","handleClickOpen","setState","handleClose","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../styles/index.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport { Form, Input } from \"semantic-ui-react\";\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: \"4rem\"\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <h2>{children}</h2>\n      {onClose ? (\n        <IconButton\n          aria-label=\"Close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: \"4rem\"\n  }\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: \"4rem\"\n  }\n}))(MuiDialogActions);\n\nexport default class NewToneMenu extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleClickOpen = () => {\n    this.setState({\n      open: true\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <FontAwesomeIcon\n          className=\"plus-icon inl-blk fa-lg\"\n          icon={faPlusCircle}\n          onClick={this.handleClickOpen}\n        />\n\n        <Dialog\n          fullWidth={true}\n          maxWidth={\"md\"}\n          onClose={this.handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={this.state.open}\n        >\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\n            Add a New Tone\n          </DialogTitle>\n          <DialogContent>\n            <Form\n              id=\"contactform\"\n              action=\"https://formspree.io/garrettvercoe@gmail.com\"\n              method=\"POST\"\n            >\n              <Form.Group widths=\"equal\">\n                <Form.Input\n                  fluid\n                  label=\"First name\"\n                  name=\"first\"\n                  placeholder=\"First name\"\n                />\n                <Form.Input\n                  fluid\n                  label=\"Last name\"\n                  name=\"last\"\n                  placeholder=\"Last name\"\n                />\n                <Form.Input\n                  fluid\n                  label=\"Email\"\n                  name=\"_replyto\"\n                  placeholder=\"johndoe@gmail.com\"\n                />\n              </Form.Group>\n              <Input type=\"hidden\" name=\"_subject\" value=\"Contact form\" />\n              <Form.TextArea\n                label=\"Message\"\n                name=\"message\"\n                placeholder=\"Hey Garrett...\"\n              />\n              <br />\n              <Form.Button>Submit</Form.Button>\n            </Form>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Add Tones\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}