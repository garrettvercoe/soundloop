{"ast":null,"code":"var _jsxFileName = \"/Users/garrett/repos/soundloop/src/components/MouseTracker.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeInvisible } from \"../actions/cursor\";\nimport { updateTone } from \"../actions/tones\";\nimport { red, pink, purple, indigo, blue, cyan, teal, green, yellow, amber, orange, deepOrange } from \"@material-ui/core/colors/\";\nconst colorHues = [red, pink, purple, indigo, blue, cyan, teal, green, yellow, amber, orange, deepOrange];\n\nclass Cursor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.showRightCursor = this.showRightCursor.bind(this); // this.selector = React.createRef();\n\n    this.cx = this.props.center.x;\n    this.cy = this.props.center.y;\n    this.snap = this.snap.bind(this);\n    this.findSnapCoordinates = this.findSnapCoordinates.bind(this);\n    this.findClosestLoop = this.findClosestLoop.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"sound\" + this.props.sound);\n    console.log(\"sounds\" + this.props.sounds);\n    this.colorHue = this.props.sounds.indexOf(this.props.sound);\n    console.log(\"colorhue\" + this.colorHue);\n    this.color = colorHues[this.colorHue][this.props.octave * 100];\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.sound !== this.props.sound) {\n      this.colorHue = this.props.sounds.indexOf(this.props.sound);\n      this.color = colorHues[this.colorHue][this.props.octave * 100];\n    }\n\n    if (prevProps.octave !== this.props.octave) {\n      this.colorHue = this.props.sounds.indexOf(this.props.sound);\n      this.color = colorHues[this.colorHue][this.props.octave * 100];\n    }\n  }\n\n  findClosestLoop(distToCenter) {\n    // iterate through loops array and compare radii\n    var acceptableRange = 50;\n    var loopArray = this.props.loops;\n    var id = 0;\n    var curr = loopArray[id].radius;\n    var diff = Math.abs(distToCenter - curr);\n\n    for (var i = 0; i < loopArray.length; i++) {\n      if (this.props.loops[i].active) {\n        var newdiff = Math.abs(distToCenter - loopArray[i].radius);\n\n        if (newdiff < diff) {\n          diff = newdiff;\n          curr = loopArray[i].radius;\n          id = i;\n        }\n      }\n    }\n\n    if (diff < acceptableRange) {\n      return {\n        index: id,\n        value: curr\n      };\n    } else {\n      return null;\n    }\n  }\n\n  findSnapCoordinates(x1, y1, cx, cy, distance) {\n    var angle = Math.atan2(y1, x1);\n    const x2 = cx - Math.cos(angle) * distance;\n    const y2 = cy + Math.sin(angle) * distance;\n    return {\n      x: x2,\n      y: y2\n    };\n  }\n\n  findClosestInterval(a, b, loop) {\n    // finds closest tone and returns the index so that color can be changed\n    var min = 100;\n    var ret = 0;\n\n    for (var i = 0; i < this.props.tones.length; i++) {\n      // need to compare pt + or - offset\n      if (this.props.tones[i].attachedLoop === loop) {\n        var x = this.cx - this.props.tones[i].offset.x;\n        var y = this.cy - this.props.tones[i].offset.y;\n        var diffX = x - a;\n        var diffY = y - b;\n        var dist = Math.sqrt(diffX * diffX + diffY * diffY);\n\n        if (dist < min) {\n          min = dist;\n          ret = this.props.tones[i].id;\n        }\n      }\n    }\n\n    return ret;\n  } // convert current cursor location to coordinates\n\n\n  findTrueCoordinates(x1, y1, angle, distance) {\n    // current angle from center\n    var originalAngle = Math.atan2(y1, x1); // original angle in radians\n\n    var angleRad = angle * (Math.PI / 180); // new angle\n\n    var newAngle = originalAngle - angleRad;\n    const x2 = this.cx + Math.cos(newAngle) * distance;\n    const y2 = this.cy + Math.sin(newAngle) * distance;\n    return {\n      x: x2,\n      y: y2\n    };\n  }\n\n  snap(x1, y1) {\n    // calculate virtual location with rotation\n    // first calculate distance\n    var a = y1 - this.cy;\n    var b = x1 - this.cx;\n    var distToCenter = Math.sqrt(a * a + b * b);\n    var loopToSnap = this.findClosestLoop(distToCenter);\n\n    if (loopToSnap) {\n      var angle = this.props.loops[loopToSnap.index].rotation;\n      var trueCoords = this.findTrueCoordinates(b, a, angle, distToCenter);\n      var intervalId = this.findClosestInterval(trueCoords.x, trueCoords.y, loopToSnap.index);\n      this.props.dispatch(updateTone(intervalId, this.color, this.props.sound + this.props.octave, //  this.props.screenHeight / 50,\n      this.props.toneSizes[this.props.selectedSustain], this.props.selectedSustain));\n    }\n  }\n\n  showRightCursor() {\n    switch (this.props.mode) {\n      case \"ADD\":\n        return \"pointer\";\n\n      case \"MOVE_UNSELECTED\":\n        return \"cell\";\n\n      case \"MOVE_SELECTED\":\n        return \"grabbed\";\n\n      case \"ERASE\":\n        return \"cell\";\n\n      default:\n        return \"auto\";\n    }\n  }\n\n  handleClick() {\n    // this.props.dispatch(makeInvisible());\n    console.log(\"clicked\");\n\n    if (this.props.playing === false) {\n      // this.rect = this.selector.current.getBoundingClientRect();\n      // const x = this.props.cursorPos.x - 200;\n      // const y = this.props.cursorPos.y - 150;\n      const x = this.props.cursorPos.x - 37 - 2 * this.props.toneSizes[this.props.selectedSustain];\n      const y = this.props.cursorPos.y - 135 - this.props.toneSizes[this.props.selectedSustain];\n      this.snap(x, y); // this.setState({\n      //   deltaPosition: {\n      //     x: 0,\n      //     y: 0\n      //   }\n      // });\n\n      for (var i = 0; i < this.props.tones.length; i++) {\n        if (this.props.tones[i].sound === null && this.props.loops[this.props.tones[i].attachedLoop].mode === true) {// this.props.dispatch(updateTone(i, \"transparent\", null, 1.5));\n        }\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: () => this.handleClick(),\n      style: {\n        position: \"absolute\",\n        left: this.props.cursorPos.x - 37 - 2 * this.props.toneSizes[this.props.selectedSustain],\n        top: this.props.cursorPos.y - 135 - this.props.toneSizes[this.props.selectedSustain],\n        width: 2 * this.props.toneSizes[this.props.selectedSustain],\n        height: 2 * this.props.toneSizes[this.props.selectedSustain],\n        borderRadius: \"50%\",\n        pointerEvents: this.props.mode === \"ADD\" ? \"auto\" : \"none\",\n        cursor: this.showRightCursor(),\n        background: this.props.mode === \"ADD\" ? this.color : \"transparent\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    mode: state.cursor.mode,\n    loops: state.loops,\n    tones: state.tones,\n    sound: state.cursor.sound,\n    sounds: state.shared.sounds,\n    playing: state.shared.playing,\n    center: state.shared.center,\n    octave: state.shared.octave,\n    screenHeight: state.shared.screenHeight,\n    selectedSustain: state.shared.selectedSustain,\n    toneSizes: state.shared.toneSizes\n  };\n}\n\nexport default connect(mapStateToProps)(Cursor);","map":{"version":3,"sources":["/Users/garrett/repos/soundloop/src/components/MouseTracker.js"],"names":["React","connect","makeInvisible","updateTone","red","pink","purple","indigo","blue","cyan","teal","green","yellow","amber","orange","deepOrange","colorHues","Cursor","Component","constructor","props","handleClick","bind","showRightCursor","cx","center","x","cy","y","snap","findSnapCoordinates","findClosestLoop","componentDidMount","console","log","sound","sounds","colorHue","indexOf","color","octave","componentDidUpdate","prevProps","distToCenter","acceptableRange","loopArray","loops","id","curr","radius","diff","Math","abs","i","length","active","newdiff","index","value","x1","y1","distance","angle","atan2","x2","cos","y2","sin","findClosestInterval","a","b","loop","min","ret","tones","attachedLoop","offset","diffX","diffY","dist","sqrt","findTrueCoordinates","originalAngle","angleRad","PI","newAngle","loopToSnap","rotation","trueCoords","intervalId","dispatch","toneSizes","selectedSustain","mode","playing","cursorPos","render","position","left","top","width","height","borderRadius","pointerEvents","cursor","background","mapStateToProps","state","shared","screenHeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeInvisible } from \"../actions/cursor\";\nimport { updateTone } from \"../actions/tones\";\nimport {\n  red,\n  pink,\n  purple,\n  indigo,\n  blue,\n  cyan,\n  teal,\n  green,\n  yellow,\n  amber,\n  orange,\n  deepOrange\n} from \"@material-ui/core/colors/\";\n\nconst colorHues = [\n  red,\n  pink,\n  purple,\n  indigo,\n  blue,\n  cyan,\n  teal,\n  green,\n  yellow,\n  amber,\n  orange,\n  deepOrange\n];\n\nclass Cursor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.showRightCursor = this.showRightCursor.bind(this);\n\n    // this.selector = React.createRef();\n\n    this.cx = this.props.center.x;\n    this.cy = this.props.center.y;\n\n    this.snap = this.snap.bind(this);\n    this.findSnapCoordinates = this.findSnapCoordinates.bind(this);\n    this.findClosestLoop = this.findClosestLoop.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"sound\" + this.props.sound);\n    console.log(\"sounds\" + this.props.sounds);\n    this.colorHue = this.props.sounds.indexOf(this.props.sound);\n    console.log(\"colorhue\" + this.colorHue);\n    this.color = colorHues[this.colorHue][this.props.octave * 100];\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.sound !== this.props.sound) {\n      this.colorHue = this.props.sounds.indexOf(this.props.sound);\n      this.color = colorHues[this.colorHue][this.props.octave * 100];\n    }\n    if (prevProps.octave !== this.props.octave) {\n      this.colorHue = this.props.sounds.indexOf(this.props.sound);\n      this.color = colorHues[this.colorHue][this.props.octave * 100];\n    }\n  }\n\n  findClosestLoop(distToCenter) {\n    // iterate through loops array and compare radii\n    var acceptableRange = 50;\n    var loopArray = this.props.loops;\n\n    var id = 0;\n    var curr = loopArray[id].radius;\n    var diff = Math.abs(distToCenter - curr);\n\n    for (var i = 0; i < loopArray.length; i++) {\n      if (this.props.loops[i].active) {\n        var newdiff = Math.abs(distToCenter - loopArray[i].radius);\n        if (newdiff < diff) {\n          diff = newdiff;\n          curr = loopArray[i].radius;\n          id = i;\n        }\n      }\n    }\n\n    if (diff < acceptableRange) {\n      return { index: id, value: curr };\n    } else {\n      return null;\n    }\n  }\n\n  findSnapCoordinates(x1, y1, cx, cy, distance) {\n    var angle = Math.atan2(y1, x1);\n    const x2 = cx - Math.cos(angle) * distance;\n    const y2 = cy + Math.sin(angle) * distance;\n    return { x: x2, y: y2 };\n  }\n\n  findClosestInterval(a, b, loop) {\n    // finds closest tone and returns the index so that color can be changed\n    var min = 100;\n    var ret = 0;\n    for (var i = 0; i < this.props.tones.length; i++) {\n      // need to compare pt + or - offset\n      if (this.props.tones[i].attachedLoop === loop) {\n        var x = this.cx - this.props.tones[i].offset.x;\n        var y = this.cy - this.props.tones[i].offset.y;\n        var diffX = x - a;\n        var diffY = y - b;\n        var dist = Math.sqrt(diffX * diffX + diffY * diffY);\n        if (dist < min) {\n          min = dist;\n          ret = this.props.tones[i].id;\n        }\n      }\n    }\n    return ret;\n  }\n\n  // convert current cursor location to coordinates\n  findTrueCoordinates(x1, y1, angle, distance) {\n    // current angle from center\n    var originalAngle = Math.atan2(y1, x1);\n    // original angle in radians\n    var angleRad = angle * (Math.PI / 180);\n    // new angle\n    var newAngle = originalAngle - angleRad;\n    const x2 = this.cx + Math.cos(newAngle) * distance;\n    const y2 = this.cy + Math.sin(newAngle) * distance;\n    return { x: x2, y: y2 };\n  }\n\n  snap(x1, y1) {\n    // calculate virtual location with rotation\n    // first calculate distance\n    var a = y1 - this.cy;\n    var b = x1 - this.cx;\n    var distToCenter = Math.sqrt(a * a + b * b);\n    var loopToSnap = this.findClosestLoop(distToCenter);\n\n    if (loopToSnap) {\n      var angle = this.props.loops[loopToSnap.index].rotation;\n      var trueCoords = this.findTrueCoordinates(b, a, angle, distToCenter);\n\n      var intervalId = this.findClosestInterval(\n        trueCoords.x,\n        trueCoords.y,\n        loopToSnap.index\n      );\n\n      this.props.dispatch(\n        updateTone(\n          intervalId,\n          this.color,\n          this.props.sound + this.props.octave,\n\n          //  this.props.screenHeight / 50,\n          this.props.toneSizes[this.props.selectedSustain],\n          this.props.selectedSustain\n        )\n      );\n    }\n  }\n\n  showRightCursor() {\n    switch (this.props.mode) {\n      case \"ADD\":\n        return \"pointer\";\n      case \"MOVE_UNSELECTED\":\n        return \"cell\";\n      case \"MOVE_SELECTED\":\n        return \"grabbed\";\n      case \"ERASE\":\n        return \"cell\";\n      default:\n        return \"auto\";\n    }\n  }\n\n  handleClick() {\n    // this.props.dispatch(makeInvisible());\n    console.log(\"clicked\");\n\n    if (this.props.playing === false) {\n      // this.rect = this.selector.current.getBoundingClientRect();\n      // const x = this.props.cursorPos.x - 200;\n      // const y = this.props.cursorPos.y - 150;\n\n      const x =\n        this.props.cursorPos.x -\n        37 -\n        2 * this.props.toneSizes[this.props.selectedSustain];\n      const y =\n        this.props.cursorPos.y -\n        135 -\n        this.props.toneSizes[this.props.selectedSustain];\n\n      this.snap(x, y);\n\n      // this.setState({\n      //   deltaPosition: {\n      //     x: 0,\n      //     y: 0\n      //   }\n      // });\n\n      for (var i = 0; i < this.props.tones.length; i++) {\n        if (\n          this.props.tones[i].sound === null &&\n          this.props.loops[this.props.tones[i].attachedLoop].mode === true\n        ) {\n          // this.props.dispatch(updateTone(i, \"transparent\", null, 1.5));\n        }\n      }\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div\n          onClick={() => this.handleClick()}\n          style={{\n            position: \"absolute\",\n            left:\n              this.props.cursorPos.x -\n              37 -\n              2 * this.props.toneSizes[this.props.selectedSustain],\n            top:\n              this.props.cursorPos.y -\n              135 -\n              this.props.toneSizes[this.props.selectedSustain],\n            width: 2 * this.props.toneSizes[this.props.selectedSustain],\n            height: 2 * this.props.toneSizes[this.props.selectedSustain],\n\n            borderRadius: \"50%\",\n            pointerEvents: this.props.mode === \"ADD\" ? \"auto\" : \"none\",\n            cursor: this.showRightCursor(),\n            background: this.props.mode === \"ADD\" ? this.color : \"transparent\"\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    mode: state.cursor.mode,\n    loops: state.loops,\n    tones: state.tones,\n    sound: state.cursor.sound,\n    sounds: state.shared.sounds,\n    playing: state.shared.playing,\n    center: state.shared.center,\n    octave: state.shared.octave,\n    screenHeight: state.shared.screenHeight,\n    selectedSustain: state.shared.selectedSustain,\n    toneSizes: state.shared.toneSizes\n  };\n}\n\nexport default connect(mapStateToProps)(Cursor);\n"]},"metadata":{},"sourceType":"module"}