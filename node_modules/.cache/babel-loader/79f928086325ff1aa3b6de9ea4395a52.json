{"ast":null,"code":"var _jsxFileName = \"/Users/ericduong/Documents/development/soundloop/src/components/Loop.js\";\nimport React from \"react\";\nimport Konva from \"konva\";\nimport { Circle } from \"react-konva\";\nexport default class Loop extends React.Component {\n  constructor(props) {\n    super(props); // need to pass x and y position to get distance and corresponding size\n\n    this.state = {\n      isDragging: false,\n      x: 100,\n      y: 100\n    };\n  }\n\n  render() {\n    var distance = this.state.x - window.innerWidth / 2;\n    console.log(this.state);\n    console.log(distance);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Circle, {\n      fill: 'red',\n      radius: 10,\n      x: this.state.x,\n      y: this.state.y,\n      draggable: true,\n      fill: this.state.isDragging ? 'green' : 'black',\n      onDragStart: () => {\n        this.setState({\n          isDragging: true\n        });\n      },\n      onDragEnd: e => {\n        this.setState({\n          isDragging: false,\n          x: e.target.x(),\n          y: e.target.y()\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Loop2, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Loop2 extends React.Component {\n  render() {\n    var rect = new Konva.Rect({});\n    var minim = Math.min(window.innerWidth / 3, window.innerHeight / 3);\n    return (// Loop position center, radius \n      React.createElement(Circle, {\n        x: window.innerWidth / 2,\n        y: window.innerHeight / 2,\n        radius: minim,\n        fill: 'transparent',\n        stroke: 'black',\n        scale: 2,\n        strokeWidth: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/ericduong/Documents/development/soundloop/src/components/Loop.js"],"names":["React","Konva","Circle","Loop","Component","constructor","props","state","isDragging","x","y","render","distance","window","innerWidth","console","log","setState","e","target","Loop2","rect","Rect","minim","Math","min","innerHeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA,eAAe,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAkC;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN,EADc,CAEd;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,KADH;AAETC,MAAAA,CAAC,EAAE,GAFM;AAGTC,MAAAA,CAAC,EAAE;AAHM,KAAb;AAKH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,QAAQ,GAAG,KAAKL,KAAL,CAAWE,CAAX,GAAgBI,MAAM,CAACC,UAAP,GAAkB,CAAjD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AACI,MAAA,IAAI,EAAE,KADV;AAEI,MAAA,MAAM,EAAE,EAFZ;AAGI,MAAA,CAAC,EAAE,KAAKL,KAAL,CAAWE,CAHlB;AAII,MAAA,CAAC,EAAE,KAAKF,KAAL,CAAWG,CAJlB;AAKI,MAAA,SAAS,MALb;AAMI,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,UAAX,GAAwB,OAAxB,GAAkC,OAN5C;AAOI,MAAA,WAAW,EAAE,MAAM;AACnB,aAAKS,QAAL,CAAc;AACVT,UAAAA,UAAU,EAAE;AADF,SAAd;AAGC,OAXL;AAYI,MAAA,SAAS,EAAEU,CAAC,IAAI;AAChB,aAAKD,QAAL,CAAc;AACVT,UAAAA,UAAU,EAAE,KADF;AAEVC,UAAAA,CAAC,EAAES,CAAC,CAACC,MAAF,CAASV,CAAT,EAFO;AAGVC,UAAAA,CAAC,EAAEQ,CAAC,CAACC,MAAF,CAAST,CAAT;AAHO,SAAd;AAKC,OAlBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAqBA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBA,CADJ;AAyBH;;AAxC4C;;AA2CjD,MAAMU,KAAN,SAAoBpB,KAAK,CAACI,SAA1B,CAAmC;AAC/BO,EAAAA,MAAM,GAAE;AACJ,QAAIU,IAAI,GAAG,IAAIpB,KAAK,CAACqB,IAAV,CAAe,EAAf,CAAX;AACA,QAAIC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASZ,MAAM,CAACC,UAAP,GAAkB,CAA3B,EAA8BD,MAAM,CAACa,WAAP,GAAmB,CAAjD,CAAZ;AACA,WAAS;AACL,0BAAC,MAAD;AACI,QAAA,CAAC,EAAEb,MAAM,CAACC,UAAP,GAAkB,CADzB;AAEI,QAAA,CAAC,EAAED,MAAM,CAACa,WAAP,GAAmB,CAF1B;AAGI,QAAA,MAAM,EAAEH,KAHZ;AAII,QAAA,IAAI,EAAE,aAJV;AAKI,QAAA,MAAM,EAAE,OALZ;AAMI,QAAA,KAAK,EAAE,CANX;AAOI,QAAA,WAAW,EAAE,CAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAWH;;AAf8B","sourcesContent":["import React from \"react\"\nimport Konva from \"konva\"\nimport { Circle } from \"react-konva\";\n\nexport default class Loop extends React.Component{\n    constructor(props){\n        super(props)\n        // need to pass x and y position to get distance and corresponding size\n        this.state = {\n            isDragging: false,\n            x: 100,\n            y: 100\n        }\n    }\n\n    render(){\n        var distance = this.state.x - (window.innerWidth/2);\n        console.log(this.state)\n        console.log(distance)\n        return(\n            <div>\n            <Circle\n                fill={'red'}\n                radius={10}\n                x={this.state.x}\n                y={this.state.y}\n                draggable\n                fill={this.state.isDragging ? 'green' : 'black'}\n                onDragStart={() => {\n                this.setState({\n                    isDragging: true\n                });\n                }}\n                onDragEnd={e => {\n                this.setState({\n                    isDragging: false,\n                    x: e.target.x(),\n                    y: e.target.y()\n                });\n                }}\n            />\n            <Loop2 />\n            </div>\n        )\n    }\n}\n\nclass Loop2 extends React.Component{\n    render(){\n        var rect = new Konva.Rect({})\n        var minim = Math.min(window.innerWidth/3, window.innerHeight/3);\n        return ( // Loop position center, radius \n            <Circle\n                x={window.innerWidth/2}\n                y={window.innerHeight/2}\n                radius={minim}\n                fill={'transparent'} \n                stroke={'black'}\n                scale={2}\n                strokeWidth={3}\n            />\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}