{"ast":null,"code":"var _jsxFileName = \"/Users/ericduong/Documents/development/soundloop/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Text, Circle } from \"react-konva\";\nimport Konva from \"konva\";\nimport ToneLibrary from \"./ToneLibrary\";\nimport Loop from \"./Loop\";\nimport Portal from \"./Portal\";\nimport BottomNav from \"./BottomNav\";\nimport MountedTones from \"./MountedTones\";\nimport { connect } from \"react-redux\";\nimport { ReactReduxContext, Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"../reducers\";\nimport middleware from \"../middleware\";\nconst store = createStore(reducer, middleware);\nconst unsubscribe = store.subscribe(() => console.log(store.getState()));\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    // Stage is a div container\n    // Layer is actual canvas element (so you may have several canvases in the stage)\n    // And then we have canvas shapes inside the Layer\n    return React.createElement(ReactReduxContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, ({\n      store\n    }) => React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Stage, {\n      width: window.innerWidth,\n      height: window.innerHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Loop, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(MountedTones, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Portal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(ToneLibrary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(BottomNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/ericduong/Documents/development/soundloop/src/components/App.js"],"names":["React","Component","render","Stage","Layer","Rect","Text","Circle","Konva","ToneLibrary","Loop","Portal","BottomNav","MountedTones","connect","ReactReduxContext","Provider","createStore","reducer","middleware","store","unsubscribe","subscribe","console","log","getState","App","constructor","props","state","width","height","updateWindowDimensions","bind","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","setState","innerWidth","innerHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,MAAnC,QAAiD,aAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,EAA4BC,QAA5B,QAA2C,aAA3C;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,MAAMC,KAAK,GAAGH,WAAW,CAACC,OAAD,EAAUC,UAAV,CAAzB;AACA,MAAME,WAAW,GAAGD,KAAK,CAACE,SAAN,CAAgB,MAAMC,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,QAAN,EAAZ,CAAtB,CAApB;;AAEA,MAAMC,GAAN,SAAkBzB,SAAlB,CAA4B;AAC1B0B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAb;AACA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAA9B;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,sBAAL;AACAG,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKJ,sBAAvC;AACD;;AACDK,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKN,sBAA1C;AACD;;AACDA,EAAAA,sBAAsB,GAAG;AACvB,SAAKO,QAAL,CAAc;AAAET,MAAAA,KAAK,EAAEK,MAAM,CAACK,UAAhB;AAA4BT,MAAAA,MAAM,EAAEI,MAAM,CAACM;AAA3C,KAAd;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAjB;AACD;;AACD3B,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA,WACE,oBAAC,iBAAD,CAAmB,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEkB,MAAAA;AAAF,KAAD,KACH,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEe,MAAM,CAACK,UAArB;AAAiC,MAAA,MAAM,EAAEL,MAAM,CAACM,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAGrB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAHA,CADF,CADF,CAFA,CADF;AAoBD;;AAzCyB","sourcesContent":["import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Text, Circle } from \"react-konva\";\nimport Konva from \"konva\";\nimport ToneLibrary from \"./ToneLibrary\";\nimport Loop from \"./Loop\";\nimport Portal from \"./Portal\";\nimport BottomNav from \"./BottomNav\";\nimport MountedTones from \"./MountedTones\";\nimport { connect } from \"react-redux\";\nimport { ReactReduxContext, Provider} from \"react-redux\"\nimport {createStore} from \"redux\"\nimport reducer from \"../reducers\";\nimport middleware from \"../middleware\";\nconst store = createStore(reducer, middleware);\nconst unsubscribe = store.subscribe(() => console.log(store.getState()));\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { width: 0, height: 0 };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n    console.log(this.state);\n  }\n  render() {\n    // Stage is a div container\n    // Layer is actual canvas element (so you may have several canvases in the stage)\n    // And then we have canvas shapes inside the Layer\n    return (\n      <ReactReduxContext.Consumer>\n        {({ store }) => (\n      <React.Fragment>\n        <Stage width={window.innerWidth} height={window.innerHeight}>\n          <Provider store ={store}>\n          <Loop />\n          <MountedTones />\n          <Portal>\n            <ToneLibrary />\n            <BottomNav />\n          </Portal>\n          </Provider>\n        </Stage>\n        \n      </React.Fragment>\n      \n      )}\n      </ReactReduxContext.Consumer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}