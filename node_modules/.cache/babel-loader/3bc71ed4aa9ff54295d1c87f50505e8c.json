{"ast":null,"code":"var _jsxFileName = \"/Users/garrett/repos/soundloop/src/components/TempoSlider.js\";\nimport React from \"react\";\nimport { updateTempo } from \"../actions/shared\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { connect } from \"react-redux\";\nconst TempoSlider = withStyles({\n  root: {\n    color: \"#692D54\",\n    height: 2\n  },\n  thumb: {\n    width: 15,\n    height: 15,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow: \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)\",\n      backgroundColor: \"#692D54\" // Reset on touch devices, it doesn't add specificity\n\n    }\n  },\n  // active: {},\n  track: {\n    height: 4,\n    borderRadius: 4\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4\n  }\n})(Slider);\n\nclass Tempo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleTempoChange = this.handleTempoChange.bind(this);\n  }\n\n  handleTempoChange(event, newValue) {\n    this.props.dispatch(updateTempo(newValue));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        display: \"inline-block\",\n        position: \"relative\",\n        marginRight: \"auto\",\n        marginLeft: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"TEMPO\"), React.createElement(\"div\", {\n      style: {\n        paddingLeft: \"0.5rem\",\n        paddingRight: \"0.5rem\",\n        width: \"100px\",\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(TempoSlider, {\n      defaultValue: 1,\n      onChange: this.handleTempoChange,\n      \"aria-labelledby\": \"continuous-slider\",\n      valueLabelDisplay: \"off\",\n      min: 0.5,\n      max: 2,\n      step: 0.5,\n      disabled: !this.props.playing ? false : true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tempo: state.shared.tempo,\n    playing: state.shared.playing\n  };\n}\n\nconst ConnectedTempo = connect(mapStateToProps)(Tempo);\nexport default ConnectedTempo;","map":{"version":3,"sources":["/Users/garrett/repos/soundloop/src/components/TempoSlider.js"],"names":["React","updateTempo","withStyles","makeStyles","Slider","connect","TempoSlider","root","color","height","thumb","width","boxShadow","backgroundColor","track","borderRadius","rail","Tempo","Component","constructor","props","handleTempoChange","bind","event","newValue","dispatch","render","display","position","marginRight","marginLeft","paddingLeft","paddingRight","playing","mapStateToProps","state","tempo","shared","ConnectedTempo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,MAAMC,WAAW,GAAGJ,UAAU,CAAC;AAC7BK,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,SADH;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GADuB;AAK7BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,EADF;AAELF,IAAAA,MAAM,EAAE,EAFH;AAGL,gCAA4B;AAC1BG,MAAAA,SAAS,EACP,gFAFwB;AAI1BC,MAAAA,eAAe,EAAE,SAJS,CAM1B;;AAN0B;AAHvB,GALsB;AAiB7B;AACAC,EAAAA,KAAK,EAAE;AACLL,IAAAA,MAAM,EAAE,CADH;AAELM,IAAAA,YAAY,EAAE;AAFT,GAlBsB;AAsB7BC,EAAAA,IAAI,EAAE;AACJP,IAAAA,MAAM,EAAE,CADJ;AAEJM,IAAAA,YAAY,EAAE;AAFV;AAtBuB,CAAD,CAAV,CA0BjBX,MA1BiB,CAApB;;AA4BA,MAAMa,KAAN,SAAoBjB,KAAK,CAACkB,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAEDD,EAAAA,iBAAiB,CAACE,KAAD,EAAQC,QAAR,EAAkB;AACjC,SAAKJ,KAAL,CAAWK,QAAX,CAAoBxB,WAAW,CAACuB,QAAD,CAA/B;AACD;;AACDE,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,QAAQ,EAAE,UAFL;AAGLC,QAAAA,WAAW,EAAE,MAHR;AAILC,QAAAA,UAAU,EAAE;AAJP,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,EASE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,WAAW,EAAE,QADR;AAELC,QAAAA,YAAY,EAAE,QAFT;AAGLrB,QAAAA,KAAK,EAAE,OAHF;AAILgB,QAAAA,OAAO,EAAE;AAJJ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,WAAD;AACE,MAAA,YAAY,EAAE,CADhB;AAEE,MAAA,QAAQ,EAAE,KAAKN,iBAFjB;AAGE,yBAAgB,mBAHlB;AAIE,MAAA,iBAAiB,EAAC,KAJpB;AAKE,MAAA,GAAG,EAAE,GALP;AAME,MAAA,GAAG,EAAE,CANP;AAOE,MAAA,IAAI,EAAE,GAPR;AAQE,MAAA,QAAQ,EAAE,CAAC,KAAKD,KAAL,CAAWa,OAAZ,GAAsB,KAAtB,GAA8B,IAR1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CATF,CADF;AAyCD;;AAnDiC;;AAsDpC,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaD,KADf;AAELH,IAAAA,OAAO,EAAEE,KAAK,CAACE,MAAN,CAAaJ;AAFjB,GAAP;AAID;;AACD,MAAMK,cAAc,GAAGjC,OAAO,CAAC6B,eAAD,CAAP,CAAyBjB,KAAzB,CAAvB;AAEA,eAAeqB,cAAf","sourcesContent":["import React from \"react\";\nimport { updateTempo } from \"../actions/shared\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { connect } from \"react-redux\";\n\nconst TempoSlider = withStyles({\n  root: {\n    color: \"#692D54\",\n    height: 2\n  },\n  thumb: {\n    width: 15,\n    height: 15,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow:\n        \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)\",\n\n      backgroundColor: \"#692D54\"\n\n      // Reset on touch devices, it doesn't add specificity\n    }\n  },\n  // active: {},\n  track: {\n    height: 4,\n    borderRadius: 4\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4\n  }\n})(Slider);\n\nclass Tempo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleTempoChange = this.handleTempoChange.bind(this);\n  }\n\n  handleTempoChange(event, newValue) {\n    this.props.dispatch(updateTempo(newValue));\n  }\n  render() {\n    return (\n      <div\n        style={{\n          display: \"inline-block\",\n          position: \"relative\",\n          marginRight: \"auto\",\n          marginLeft: \"0\"\n        }}\n      >\n        <div className=\"\">TEMPO</div>\n        <div\n          style={{\n            paddingLeft: \"0.5rem\",\n            paddingRight: \"0.5rem\",\n            width: \"100px\",\n            display: \"inline-block\"\n          }}\n        >\n          <TempoSlider\n            defaultValue={1}\n            onChange={this.handleTempoChange}\n            aria-labelledby=\"continuous-slider\"\n            valueLabelDisplay=\"off\"\n            min={0.5}\n            max={2}\n            step={0.5}\n            disabled={!this.props.playing ? false : true}\n          />\n          {/* <div\n            style={{\n              paddingLeft: \"0.5rem\",\n              paddingRight: \"0.5rem\",\n              width: \"100px\",\n              display: \"inline-block\"\n            }}\n          >\n            {this.props.tempo}\n          </div> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tempo: state.shared.tempo,\n    playing: state.shared.playing\n  };\n}\nconst ConnectedTempo = connect(mapStateToProps)(Tempo);\n\nexport default ConnectedTempo;\n"]},"metadata":{},"sourceType":"module"}