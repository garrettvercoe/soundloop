{"ast":null,"code":"var _jsxFileName = \"/Users/ericduong/Documents/repos/soundloop/src/components/MountedTones.js\";\nimport React from \"react\";\nimport \"../styles/index.css\";\nimport { Layer, Group } from \"react-konva\";\nimport { connect } from \"react-redux\";\nimport ToneKonva from \"./ToneKonva\";\n\nclass MountedTones extends React.Component {\n  // componentDidMount(){\n  //   console.log(\"CHILD: \" + JSON.stringify(this.layer.children))\n  //   console.log(\"GROUP: \" + this.gruppe)\n  //   this.gruppe.rotate(3)\n  //   console.log(\"TONES: \" + this.props.tones)\n  //   console.log(\"FILTER: \" + this.props.tones.filter(item => item.attachedLoop === 0))\n  //   console.log(\"FILTER: \" + this.props.tones.filter(function(item){return item.attachedLoop==0}))\n  //   // console.log(\"CHILD1: \" + this.child1)\n  // }\n  componentDidUpdate(prevProps) {\n    if (prevProps.tones !== this.props.tones) {\n      console.log(\"TONES update: \" + this.props.tones);\n    }\n  }\n\n  render() {\n    console.log(\"TONES updateddd: \" + this.props.tones);\n    console.log(\"FILTER: \" + this.props.tones.filter(item => item.attachedLoop === 0));\n\n    if (this.props.tones.length === 112) {\n      return React.createElement(Layer, {\n        ref: node => {\n          this.layer = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Group, {\n        ref: node => {\n          this.gruppe = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.props.tones.map(item => {\n        return React.createElement(ToneKonva, {\n          color: item.color,\n          x: this.props.center.x,\n          y: this.props.center.y,\n          offset: item.offset,\n          radius: item.radius,\n          attachedLoop: item.attachedLoop,\n          sound: item.sound,\n          duration: item.duration,\n          strokeWidth: item.strokeWidth,\n          id: item.id,\n          rotation: item.rotation,\n          ref: node => {\n            this.child = node;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      })));\n    } else {\n      return null;\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tones: state.tones,\n    loops: state.loops,\n    center: state.shared.center\n  };\n}\n\nexport default connect(mapStateToProps)(MountedTones);","map":{"version":3,"sources":["/Users/ericduong/Documents/repos/soundloop/src/components/MountedTones.js"],"names":["React","Layer","Group","connect","ToneKonva","MountedTones","Component","componentDidUpdate","prevProps","tones","props","console","log","render","filter","item","attachedLoop","length","node","layer","gruppe","map","color","center","x","y","offset","radius","sound","duration","strokeWidth","id","rotation","child","mapStateToProps","state","loops","shared"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,aAA7B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AACzC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEAC,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AAC3B,QAAIA,SAAS,CAACC,KAAV,KAAoB,KAAKC,KAAL,CAAWD,KAAnC,EAAyC;AACvCE,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmB,KAAKF,KAAL,CAAWD,KAA1C;AACD;AACF;;AAEDI,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsB,KAAKF,KAAL,CAAWD,KAA7C;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAa,KAAKF,KAAL,CAAWD,KAAX,CAAiBK,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACC,YAAL,KAAsB,CAAtD,CAAzB;;AACA,QAAI,KAAKN,KAAL,CAAWD,KAAX,CAAiBQ,MAAjB,KAA4B,GAAhC,EAAoC;AACpC,aACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEC,IAAI,IAAI;AAAE,eAAKC,KAAL,GAAaD,IAAb;AAAoB,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,IAAI,IAAI;AAAE,eAAKE,MAAL,GAAcF,IAAd;AAAqB,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAmBC,KAAKR,KAAL,CAAWD,KAAX,CAAiBY,GAAjB,CAAqBN,IAAI,IAAI;AAC5B,eACE,oBAAC,SAAD;AACE,UAAA,KAAK,EAAEA,IAAI,CAACO,KADd;AAEE,UAAA,CAAC,EAAE,KAAKZ,KAAL,CAAWa,MAAX,CAAkBC,CAFvB;AAGE,UAAA,CAAC,EAAE,KAAKd,KAAL,CAAWa,MAAX,CAAkBE,CAHvB;AAIE,UAAA,MAAM,EAAEV,IAAI,CAACW,MAJf;AAKE,UAAA,MAAM,EAAEX,IAAI,CAACY,MALf;AAME,UAAA,YAAY,EAAEZ,IAAI,CAACC,YANrB;AAOE,UAAA,KAAK,EAAED,IAAI,CAACa,KAPd;AAQE,UAAA,QAAQ,EAAEb,IAAI,CAACc,QARjB;AASE,UAAA,WAAW,EAAEd,IAAI,CAACe,WATpB;AAUE,UAAA,EAAE,EAAEf,IAAI,CAACgB,EAVX;AAWE,UAAA,QAAQ,EAAEhB,IAAI,CAACiB,QAXjB;AAYE,UAAA,GAAG,EAAEd,IAAI,IAAI;AAAE,iBAAKe,KAAL,GAAaf,IAAb;AAAoB,WAZrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,OAjBA,CAnBD,CADF,CADF;AA0CG,KA3CH,MA2CS;AACL,aAAO,IAAP;AACD;AACJ;;AAnEwC;;AAsE3C,SAASgB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACL1B,IAAAA,KAAK,EAAE0B,KAAK,CAAC1B,KADR;AAEL2B,IAAAA,KAAK,EAAED,KAAK,CAACC,KAFR;AAGLb,IAAAA,MAAM,EAAEY,KAAK,CAACE,MAAN,CAAad;AAHhB,GAAP;AAKD;;AAED,eAAepB,OAAO,CAAC+B,eAAD,CAAP,CAAyB7B,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport \"../styles/index.css\";\nimport { Layer, Group } from \"react-konva\";\n\nimport { connect } from \"react-redux\";\nimport ToneKonva from \"./ToneKonva\";\n\nclass MountedTones extends React.Component {\n  // componentDidMount(){\n  //   console.log(\"CHILD: \" + JSON.stringify(this.layer.children))\n  //   console.log(\"GROUP: \" + this.gruppe)\n  //   this.gruppe.rotate(3)\n  //   console.log(\"TONES: \" + this.props.tones)\n\n  //   console.log(\"FILTER: \" + this.props.tones.filter(item => item.attachedLoop === 0))\n  //   console.log(\"FILTER: \" + this.props.tones.filter(function(item){return item.attachedLoop==0}))\n  //   // console.log(\"CHILD1: \" + this.child1)\n  // }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.tones !== this.props.tones){\n      console.log(\"TONES update: \" + this.props.tones)\n    }\n  }\n\n  render() {\n    console.log(\"TONES updateddd: \" + this.props.tones)\n    console.log(\"FILTER: \" + this.props.tones.filter(item => item.attachedLoop === 0))\n    if (this.props.tones.length === 112){\n    return (\n      <Layer ref={node => { this.layer = node; }}>\n        <Group ref={node => { this.gruppe = node; }}>\n        {/* {this.props.tones.map(item => {\n          return (\n            <ToneKonva\n              color={item.color}\n              x={this.props.center.x}\n              y={this.props.center.y}\n              offset={item.offset}\n              radius={item.radius}\n              attachedLoop={item.attachedLoop}\n              sound={item.sound}\n              duration={item.duration}\n              strokeWidth={item.strokeWidth}\n              id={item.id}\n              rotation={item.rotation}\n              ref={node => { this.child = node; }}\n            />\n          );\n        })} */}\n        {this.props.tones.map(item => {\n          return (\n            <ToneKonva\n              color={item.color}\n              x={this.props.center.x}\n              y={this.props.center.y}\n              offset={item.offset}\n              radius={item.radius}\n              attachedLoop={item.attachedLoop}\n              sound={item.sound}\n              duration={item.duration}\n              strokeWidth={item.strokeWidth}\n              id={item.id}\n              rotation={item.rotation}\n              ref={node => { this.child = node; }}\n            />\n          );\n        })}\n        </Group>\n      </Layer>\n    );\n      } else {\n        return null\n      }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tones: state.tones,\n    loops: state.loops,\n    center: state.shared.center\n  };\n}\n\nexport default connect(mapStateToProps)(MountedTones);\n"]},"metadata":{},"sourceType":"module"}