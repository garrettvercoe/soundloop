{"ast":null,"code":"var _jsxFileName = \"/Users/ericduong/Documents/development/soundloop/src/components/Loop.js\";\nimport React from \"react\";\nimport Konva from \"konva\";\nimport { Stage, Layer, Circle } from \"react-konva\";\n\nclass Loop2 extends React.Component {\n  constructor(props) {\n    super(props); // need to pass x and y position to get distance and corresponding size\n\n    this.state = {\n      isDragging: false,\n      x: 50,\n      y: 50\n    };\n  }\n\n  render() {\n    var distance = this.state.x - window.innerWidth / 2;\n    return React.createElement(Circle, {\n      x: this.state.x,\n      y: this.state.y,\n      draggable: true,\n      fill: this.state.isDragging ? 'green' : 'black',\n      onDragStart: () => {\n        this.setState({\n          isDragging: true\n        });\n      },\n      onDragEnd: e => {\n        this.setState({\n          isDragging: false,\n          x: e.target.x(),\n          y: e.target.y()\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default class Loop extends React.Component {\n  render() {\n    var rect = new Konva.Rect({});\n    var minim = Math.min(window.innerWidth / 3, window.innerHeight / 3);\n    return (// Loop position center, radius \n      React.createElement(Circle, {\n        x: window.innerWidth / 2,\n        y: window.innerHeight / 2,\n        radius: minim,\n        fill: 'transparent',\n        stroke: 'black',\n        scale: 2,\n        strokeWidth: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/ericduong/Documents/development/soundloop/src/components/Loop.js"],"names":["React","Konva","Stage","Layer","Circle","Loop2","Component","constructor","props","state","isDragging","x","y","render","distance","window","innerWidth","setState","e","target","Loop","rect","Rect","minim","Math","min","innerHeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,QAAqC,aAArC;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN,EADc,CAEd;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,KADH;AAETC,MAAAA,CAAC,EAAE,EAFM;AAGTC,MAAAA,CAAC,EAAE;AAHM,KAAb;AAKH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,QAAQ,GAAG,KAAKL,KAAL,CAAWE,CAAX,GAAgBI,MAAM,CAACC,UAAP,GAAkB,CAAjD;AACA,WACY,oBAAC,MAAD;AACI,MAAA,CAAC,EAAE,KAAKP,KAAL,CAAWE,CADlB;AAEI,MAAA,CAAC,EAAE,KAAKF,KAAL,CAAWG,CAFlB;AAGI,MAAA,SAAS,MAHb;AAII,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,UAAX,GAAwB,OAAxB,GAAkC,OAJ5C;AAKI,MAAA,WAAW,EAAE,MAAM;AACnB,aAAKO,QAAL,CAAc;AACVP,UAAAA,UAAU,EAAE;AADF,SAAd;AAGC,OATL;AAUI,MAAA,SAAS,EAAEQ,CAAC,IAAI;AAChB,aAAKD,QAAL,CAAc;AACVP,UAAAA,UAAU,EAAE,KADF;AAEVC,UAAAA,CAAC,EAAEO,CAAC,CAACC,MAAF,CAASR,CAAT,EAFO;AAGVC,UAAAA,CAAC,EAAEM,CAAC,CAACC,MAAF,CAASP,CAAT;AAHO,SAAd;AAKC,OAhBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ;AAoBH;;AAjC8B;;AAoCnC,eAAe,MAAMQ,IAAN,SAAmBpB,KAAK,CAACM,SAAzB,CAAkC;AAC7CO,EAAAA,MAAM,GAAE;AACJ,QAAIQ,IAAI,GAAG,IAAIpB,KAAK,CAACqB,IAAV,CAAe,EAAf,CAAX;AACA,QAAIC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASV,MAAM,CAACC,UAAP,GAAkB,CAA3B,EAA8BD,MAAM,CAACW,WAAP,GAAmB,CAAjD,CAAZ;AACA,WAAS;AACL,0BAAC,MAAD;AACI,QAAA,CAAC,EAAEX,MAAM,CAACC,UAAP,GAAkB,CADzB;AAEI,QAAA,CAAC,EAAED,MAAM,CAACW,WAAP,GAAmB,CAF1B;AAGI,QAAA,MAAM,EAAEH,KAHZ;AAII,QAAA,IAAI,EAAE,aAJV;AAKI,QAAA,MAAM,EAAE,OALZ;AAMI,QAAA,KAAK,EAAE,CANX;AAOI,QAAA,WAAW,EAAE,CAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAWH;;AAf4C","sourcesContent":["import React from \"react\"\nimport Konva from \"konva\"\nimport { Stage, Layer, Circle } from \"react-konva\";\n\nclass Loop2 extends React.Component{\n    constructor(props){\n        super(props)\n        // need to pass x and y position to get distance and corresponding size\n        this.state = {\n            isDragging: false,\n            x: 50,\n            y: 50\n        }\n    }\n\n    render(){\n        var distance = this.state.x - (window.innerWidth/2);\n        return(\n                    <Circle\n                        x={this.state.x}\n                        y={this.state.y}\n                        draggable\n                        fill={this.state.isDragging ? 'green' : 'black'}\n                        onDragStart={() => {\n                        this.setState({\n                            isDragging: true\n                        });\n                        }}\n                        onDragEnd={e => {\n                        this.setState({\n                            isDragging: false,\n                            x: e.target.x(),\n                            y: e.target.y()\n                        });\n                        }}\n                    />\n        )\n    }\n}\n\nexport default class Loop extends React.Component{\n    render(){\n        var rect = new Konva.Rect({})\n        var minim = Math.min(window.innerWidth/3, window.innerHeight/3);\n        return ( // Loop position center, radius \n            <Circle\n                x={window.innerWidth/2}\n                y={window.innerHeight/2}\n                radius={minim}\n                fill={'transparent'} \n                stroke={'black'}\n                scale={2}\n                strokeWidth={3}\n            />\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}