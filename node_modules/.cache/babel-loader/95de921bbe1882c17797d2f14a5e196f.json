{"ast":null,"code":"var _jsxFileName = \"/Users/garrett/repos/soundloop/src/components/MuteButton.js\";\nimport React from \"react\";\nimport \"../styles/index.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faVolumeMute, faVolumeUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { toggleMute, toggleUnmute } from \"../actions/shared\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"@material-ui/core/Slider\";\nimport VolumeOff from \"@material-ui/icons/VolumeOff\";\nimport VolumeUp from \"@material-ui/icons/VolumeUp\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\"; // const MuteButtonStyle = {\n//   color: \"#692d55\",\n//   position: \"relative\",\n//   margin: \"0 auto 0 0 \"\n// };\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: \"#692D54\",\n    height: 2\n  },\n  thumb: {\n    width: 15,\n    height: 15,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow: \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)\",\n      backgroundColor: \"#692D54\" // Reset on touch devices, it doesn't add specificity\n\n    }\n  },\n  // active: {},\n  track: {\n    height: 4,\n    borderRadius: 4\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4\n  }\n})(Slider);\n\nclass MuteButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 30\n    };\n    console.log(\"state: \" + JSON.stringify(this.state));\n    console.log(\"props \" + JSON.stringify(this.props));\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event, newValue) {\n    if (newValue === 0) {\n      console.log(\"lets mute\");\n      this.props.dispatch(toggleMute());\n    } else if (this.state.value === 0 && newValue !== 0) {\n      this.props.dispatch(toggleUnmute());\n    }\n\n    this.setState({\n      value: newValue\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.props.muted ? React.createElement(VolumeOff, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }) : React.createElement(VolumeUp, {\n      style: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        paddingLeft: \"0.5rem\",\n        width: \"100px\",\n        float: \"right\",\n        color: \"#692d55\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(PrettoSlider, {\n      defaultValue: 50,\n      value: this.props.value,\n      onChange: () => this.handleChange(),\n      \"aria-labelledby\": \"continuous-slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), \" \"));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    muted: state.shared.muted\n  };\n}\n\nexport default connect(mapStateToProps)(MuteButton);","map":{"version":3,"sources":["/Users/garrett/repos/soundloop/src/components/MuteButton.js"],"names":["React","FontAwesomeIcon","faVolumeMute","faVolumeUp","connect","toggleMute","toggleUnmute","Toolbar","Grid","Slider","VolumeOff","VolumeUp","withStyles","makeStyles","PrettoSlider","root","color","height","thumb","width","boxShadow","backgroundColor","track","borderRadius","rail","MuteButton","Component","constructor","props","state","value","console","log","JSON","stringify","handleChange","bind","event","newValue","dispatch","setState","render","muted","paddingLeft","float","mapStateToProps","shared"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../styles/index.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faVolumeMute, faVolumeUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { toggleMute, toggleUnmute } from \"../actions/shared\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"@material-ui/core/Slider\";\nimport VolumeOff from \"@material-ui/icons/VolumeOff\";\nimport VolumeUp from \"@material-ui/icons/VolumeUp\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\n// const MuteButtonStyle = {\n//   color: \"#692d55\",\n//   position: \"relative\",\n//   margin: \"0 auto 0 0 \"\n// };\nconst PrettoSlider = withStyles({\n  root: {\n    color: \"#692D54\",\n    height: 2\n  },\n  thumb: {\n    width: 15,\n    height: 15,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow:\n        \"0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)\",\n\n      backgroundColor: \"#692D54\"\n\n      // Reset on touch devices, it doesn't add specificity\n    }\n  },\n  // active: {},\n  track: {\n    height: 4,\n    borderRadius: 4\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4\n  }\n})(Slider);\nclass MuteButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: 30 };\n    console.log(\"state: \" + JSON.stringify(this.state));\n    console.log(\"props \" + JSON.stringify(this.props));\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event, newValue) {\n    if (newValue === 0) {\n      console.log(\"lets mute\");\n      this.props.dispatch(toggleMute());\n    } else if (this.state.value === 0 && newValue !== 0) {\n      this.props.dispatch(toggleUnmute());\n    }\n    this.setState({ value: newValue });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.muted ? <VolumeOff /> : <VolumeUp style={{}} />}\n\n        <div\n          style={{\n            paddingLeft: \"0.5rem\",\n            width: \"100px\",\n            float: \"right\",\n            color: \"#692d55\"\n          }}\n        >\n          <PrettoSlider\n            defaultValue={50}\n            value={this.props.value}\n            onChange={() => this.handleChange()}\n            aria-labelledby=\"continuous-slider\"\n          />{\" \"}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    muted: state.shared.muted\n  };\n}\n\nexport default connect(mapStateToProps)(MuteButton);\n"]},"metadata":{},"sourceType":"module"}