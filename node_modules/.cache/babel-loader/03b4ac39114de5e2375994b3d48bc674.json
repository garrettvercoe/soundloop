{"ast":null,"code":"//TONES\nexport const ADD_TONE = \"ADD_TONE\";\nexport const UPDATE_TONE = \"UPDATE_TONE\";\nexport const RESIZE_TONE = \"RESIZE_TONE\";\nexport const RECEIVE_TONES = \"RECEIVE_TONES\";\nexport const ROTATE_TONE = \"ROTATE_TONE\";\nlet nextToneId = 0;\nexport function addTone(xCoord, yCoord, colorCode, stroke, strokeWidth, offsetx, offsety, attLoop, rad, sound) {\n  return {\n    type: ADD_TONE,\n    id: nextToneId++,\n    position: {\n      x: xCoord,\n      y: yCoord\n    },\n    offset: {\n      x: offsetx,\n      y: offsety\n    },\n    color: colorCode,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    attachedLoop: attLoop,\n    radius: rad,\n    sound: sound\n  };\n}\nexport function resizeTone(tone) {\n  return {\n    type: RESIZE_TONE,\n    tone\n  };\n}\nexport function updateTone(id, color, sound, strokeWidth) {\n  return {\n    type: UPDATE_TONE,\n    id: id,\n    color: color,\n    sound: sound,\n    strokeWidth: strokeWidth\n  };\n}\nexport function rotateTone(id, rotation) {\n  return {\n    type: ROTATE_TONE,\n    id: id,\n    rotation: rotation\n  };\n}\nexport function receiveTones(tones) {\n  return {\n    type: RECEIVE_TONES,\n    tones\n  };\n}","map":{"version":3,"sources":["/Users/ericduong/Documents/repos/soundloop/src/actions/tones.js"],"names":["ADD_TONE","UPDATE_TONE","RESIZE_TONE","RECEIVE_TONES","ROTATE_TONE","nextToneId","addTone","xCoord","yCoord","colorCode","stroke","strokeWidth","offsetx","offsety","attLoop","rad","sound","type","id","position","x","y","offset","color","attachedLoop","radius","resizeTone","tone","updateTone","rotateTone","rotation","receiveTones","tones"],"mappings":"AAAA;AACA,OAAO,MAAMA,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,IAAIC,UAAU,GAAG,CAAjB;AACA,OAAO,SAASC,OAAT,CACLC,MADK,EAELC,MAFK,EAGLC,SAHK,EAILC,MAJK,EAKLC,WALK,EAMLC,OANK,EAOLC,OAPK,EAQLC,OARK,EASLC,GATK,EAULC,KAVK,EAWL;AACA,SAAO;AACLC,IAAAA,IAAI,EAAEjB,QADD;AAELkB,IAAAA,EAAE,EAAEb,UAAU,EAFT;AAGLc,IAAAA,QAAQ,EAAE;AACRC,MAAAA,CAAC,EAAEb,MADK;AAERc,MAAAA,CAAC,EAAEb;AAFK,KAHL;AAOLc,IAAAA,MAAM,EAAE;AACNF,MAAAA,CAAC,EAAER,OADG;AAENS,MAAAA,CAAC,EAAER;AAFG,KAPH;AAWLU,IAAAA,KAAK,EAAEd,SAXF;AAYLC,IAAAA,MAAM,EAAEA,MAZH;AAaLC,IAAAA,WAAW,EAAEA,WAbR;AAcLa,IAAAA,YAAY,EAAEV,OAdT;AAeLW,IAAAA,MAAM,EAAEV,GAfH;AAgBLC,IAAAA,KAAK,EAAEA;AAhBF,GAAP;AAkBD;AAED,OAAO,SAASU,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,SAAO;AACLV,IAAAA,IAAI,EAAEf,WADD;AAELyB,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,UAAT,CAAoBV,EAApB,EAAwBK,KAAxB,EAA+BP,KAA/B,EAAsCL,WAAtC,EAAmD;AACxD,SAAO;AACLM,IAAAA,IAAI,EAAEhB,WADD;AAELiB,IAAAA,EAAE,EAAEA,EAFC;AAGLK,IAAAA,KAAK,EAAEA,KAHF;AAILP,IAAAA,KAAK,EAAEA,KAJF;AAKLL,IAAAA,WAAW,EAAEA;AALR,GAAP;AAOD;AAED,OAAO,SAASkB,UAAT,CAAoBX,EAApB,EAAwBY,QAAxB,EAAiC;AACtC,SAAO;AACLb,IAAAA,IAAI,EAAEb,WADD;AAELc,IAAAA,EAAE,EAAEA,EAFC;AAGLY,IAAAA,QAAQ,EAAEA;AAHL,GAAP;AAKD;AAED,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAClC,SAAO;AACLf,IAAAA,IAAI,EAAEd,aADD;AAEL6B,IAAAA;AAFK,GAAP;AAID","sourcesContent":["//TONES\nexport const ADD_TONE = \"ADD_TONE\";\nexport const UPDATE_TONE = \"UPDATE_TONE\";\nexport const RESIZE_TONE = \"RESIZE_TONE\";\nexport const RECEIVE_TONES = \"RECEIVE_TONES\";\nexport const ROTATE_TONE = \"ROTATE_TONE\";\n\nlet nextToneId = 0;\nexport function addTone(\n  xCoord,\n  yCoord,\n  colorCode,\n  stroke,\n  strokeWidth,\n  offsetx,\n  offsety,\n  attLoop,\n  rad,\n  sound\n) {\n  return {\n    type: ADD_TONE,\n    id: nextToneId++,\n    position: {\n      x: xCoord,\n      y: yCoord\n    },\n    offset: {\n      x: offsetx,\n      y: offsety\n    },\n    color: colorCode,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    attachedLoop: attLoop,\n    radius: rad,\n    sound: sound\n  };\n}\n\nexport function resizeTone(tone) {\n  return {\n    type: RESIZE_TONE,\n    tone\n  };\n}\n\nexport function updateTone(id, color, sound, strokeWidth) {\n  return {\n    type: UPDATE_TONE,\n    id: id,\n    color: color,\n    sound: sound,\n    strokeWidth: strokeWidth\n  };\n}\n\nexport function rotateTone(id, rotation){\n  return {\n    type: ROTATE_TONE,\n    id: id,\n    rotation: rotation\n  }\n}\n\nexport function receiveTones(tones) {\n  return {\n    type: RECEIVE_TONES,\n    tones\n  };\n}\n"]},"metadata":{},"sourceType":"module"}